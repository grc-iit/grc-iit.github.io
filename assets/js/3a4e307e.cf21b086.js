"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[6057],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),p=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},u=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),d=n,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||o;return t?a.createElement(m,l(l({ref:r},u),{},{components:t})):a.createElement(m,l({ref:r},u))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=d;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1388:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(7462),n=(t(7294),t(3905));const o={},l="Resource Graph",i={unversionedId:"jarvis/jarvis-cd/resource-graph",id:"jarvis/jarvis-cd/resource-graph",title:"Resource Graph",description:"A resource graph contains a snapshot of the state of a cluster. This",source:"@site/docs/05-jarvis/02-jarvis-cd/03-resource-graph.md",sourceDirName:"05-jarvis/02-jarvis-cd",slug:"/jarvis/jarvis-cd/resource-graph",permalink:"/docs/jarvis/jarvis-cd/resource-graph",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Standard",permalink:"/docs/jarvis/jarvis-cd/getting-started"},next:{title:"Design & Motivation",permalink:"/docs/jarvis/jarvis-cd/design-motivation"}},s={},p=[{value:"Resource Graph Contents",id:"resource-graph-contents",level:2},{value:"Building a Resource Graph Automatically",id:"building-a-resource-graph-automatically",level:2},{value:"Storage Graph",id:"storage-graph",level:2},{value:"Network Graph",id:"network-graph",level:2},{value:"CPU Graph",id:"cpu-graph",level:2},{value:"Memory Graph",id:"memory-graph",level:2},{value:"Querying the Resource Graph",id:"querying-the-resource-graph",level:2},{value:"Future Ideas",id:"future-ideas",level:2}],u={toc:p},c="wrapper";function h(e){let{components:r,...t}=e;return(0,n.kt)(c,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"resource-graph"},"Resource Graph"),(0,n.kt)("p",null,"A resource graph contains a snapshot of the state of a cluster. This\nnormalizes machine-specific information which common across jarvis\nrepos. Resource graphs provide query interfaces which avoid having to\nrepeat the same paths all over the place. This section describes the\ncontents of a resource graph and the API available to Jarvis repos."),(0,n.kt)("h2",{id:"resource-graph-contents"},"Resource Graph Contents"),(0,n.kt)("p",null,"The resource graph contains information about the cluster hardware:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Block devices"),(0,n.kt)("li",{parentName:"ol"},"Device partitions"),(0,n.kt)("li",{parentName:"ol"},"Filesystem mount points"),(0,n.kt)("li",{parentName:"ol"},"Capacities"),(0,n.kt)("li",{parentName:"ol"},"Network protocols")),(0,n.kt)("p",null,"NOTE: The resource-graph utility command depends on:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"fi_info"),(0,n.kt)("li",{parentName:"ul"},"lsblk"),(0,n.kt)("li",{parentName:"ul"},"df")),(0,n.kt)("p",null,"If libfabric is installed through spack, please load it before continuing."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"spack load libfabric\n")),(0,n.kt)("h2",{id:"building-a-resource-graph-automatically"},"Building a Resource Graph Automatically"),(0,n.kt)("p",null,"Most of the information regarding resource graphs can be introspected.\nThe main things that are not automatic:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Hostfile: which machines are we introspecting?"),(0,n.kt)("li",{parentName:"ol"},"What is the per-user mount point of the storage devices?")),(0,n.kt)("p",null,"If you want jarvis to execute distributed programs, provide a hostfile.\nThis is optional for local programs."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis hostfile set /path/to/hostfile\n")),(0,n.kt)("p",null,"Build the resource graph"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis resource-graph build +walkthrough\n")),(0,n.kt)("p",null,"The resource graph will be stored under ",(0,n.kt)("inlineCode",{parentName:"p"},"${JARVIS_ROOT}/config/resource_graph.yaml")),(0,n.kt)("h2",{id:"storage-graph"},"Storage Graph"),(0,n.kt)("p",null,"The following command lists all block devices, their type, and their mount points:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"lsblk -o NAME,SIZE,MODEL,TRAN,MOUNTPOINT\n")),(0,n.kt)("p",null,"The following command lists all mounted filesystems and their capacities:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"df -h\n")),(0,n.kt)("p",null,"The following command lists all SPDK nvmes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"spdk_nvme list -c\n")),(0,n.kt)("p",null,"NOTE: SPDK is not currently implemented"),(0,n.kt)("p",null,"The storage resource graph parses these commands automatically."),(0,n.kt)("h2",{id:"network-graph"},"Network Graph"),(0,n.kt)("p",null,"To build the network graph, we collect the outputs from the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"fi_info\n")),(0,n.kt)("p",null,"This will store the network information available per host."),(0,n.kt)("h2",{id:"cpu-graph"},"CPU Graph"),(0,n.kt)("p",null,"CPU information can be helpful for determining information such as the number\nof threads to use for a metadata service."),(0,n.kt)("p",null,"TODO."),(0,n.kt)("h2",{id:"memory-graph"},"Memory Graph"),(0,n.kt)("p",null,"Memory information can be useful for determining things like cache sizes."),(0,n.kt)("p",null,"TODO."),(0,n.kt)("h2",{id:"querying-the-resource-graph"},"Querying the Resource Graph"),(0,n.kt)("p",null,"The resource graph can be queried for network and storage info."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from jarvis_util import *\n\nrg = ResourceGraph()\nrg.find_storage(shared=True, condense=True)\n")),(0,n.kt)("h2",{id:"future-ideas"},"Future Ideas"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"What if we have a smart NIC?"),(0,n.kt)("li",{parentName:"ul"},"What if we have FPGAs and ASICs?")))}h.isMDXComponent=!0}}]);