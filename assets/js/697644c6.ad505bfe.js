"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[1206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={},i="Examples",o={unversionedId:"hermes/components/examples",id:"hermes/components/examples",title:"Examples",description:"Ares (IIT)",source:"@site/docs/03-hermes/06-components/10-examples.md",sourceDirName:"03-hermes/06-components",slug:"/hermes/components/examples",permalink:"/docs/hermes/components/examples",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Prefetcher",permalink:"/docs/hermes/components/prefetcher"},next:{title:"Tagging",permalink:"/docs/hermes/components/tagging"}},s={},p=[{value:"Ares (IIT)",id:"ares-iit",level:2},{value:"Performance",id:"performance",level:3},{value:"Memory",id:"memory",level:4},{value:"Storage",id:"storage",level:4},{value:"Networking",id:"networking",level:4},{value:"Chameleon (TACC)",id:"chameleon-tacc",level:2},{value:"Standard Cloud Units",id:"standard-cloud-units",level:3},{value:"Tier Characterization",id:"tier-characterization",level:2},{value:"Layer (Level?)",id:"layer-level",level:2}],u={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"examples"},"Examples"),(0,r.kt)("h2",{id:"ares-iit"},"Ares (IIT)"),(0,r.kt)("p",null,"[","[../images/Ares_simplified_structure.png|Ares - simplified structure]","]"),(0,r.kt)("p",null,"[","[../images/Network_topology.png|Ares - network topology]","]"),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,(0,r.kt)("p",null,"Compute Rack")),(0,r.kt)("th",null,(0,r.kt)("p",null,"Interconnect")),(0,r.kt)("th",null,(0,r.kt)("p",null,"Storage Rack"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"8x ",(0,r.kt)("strong",null,"C1")," nodes w/ Samsung 960 Evo 250GB NVMe SSD")),(0,r.kt)("td",{rowspan:"2"},(0,r.kt)("ul",null,(0,r.kt)("li",null,"1x 40 Gbps ethernet port"),(0,r.kt)("li",null,"1x 1 Gbps ethernet"),(0,r.kt)("li",null,"200Gbps uplink switch"))),(0,r.kt)("td",{rowspan:"2"},(0,r.kt)("ul",null,(0,r.kt)("li",null,"Seagate 1TB SATA HDD"),(0,r.kt)("li",null,"Samsung 860 Evo 250GB SATA SSD")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,"24x ",(0,r.kt)("strong",null,"C2")," nodes w/ Toshiba OCZ RD400 256GB NVMe SSD")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What kind of CPU(s)?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Intel Xeon silver 4114")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"How much memory and what kind?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"128GB DDR4-2400 (need to double check)"))),(0,r.kt)("li",{parentName:"ul"},"What's the OS? (kernel version, etc.)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"OpenHPC(GCC 4.8.5) on login and compute nodes, CentOS(GCC 7.3.0)\nand on storage nodes. (Need to double check)"))),(0,r.kt)("li",{parentName:"ul"},"How is the system configured? (file systems, networking, etc.)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"All nodes are equipped with one Mellanox 40Gbps adapter."),(0,r.kt)("li",{parentName:"ul"},"Each compute/storage node has one high-speed (40Gbps) Ethernet\nand one low-speed (1Gbps) Ethernet."),(0,r.kt)("li",{parentName:"ul"},"Compute node 31, 32 and the master node are connected to the\nhigh-speed switch in the storage rack."),(0,r.kt)("li",{parentName:"ul"},"Compute and storage nodes are connected to different switches\nwhich are connected with a 200Gbps uplink."),(0,r.kt)("li",{parentName:"ul"},"The network speed on the storage nodes are limited by the PCIe\n2.0 standard, which is around 1GB/s."),(0,r.kt)("li",{parentName:"ul"},"OrangeFS 2.9.7 has been installed into /opt/ohpc/pub/orangefs.\nEvery user can run it and access it from MPI applications with\nproper configuration in the MPI library.")))),(0,r.kt)("h3",{id:"performance"},"Performance"),(0,r.kt)("h4",{id:"memory"},"Memory"),(0,r.kt)("p",null,"RDMA max bandwidth is around 37 Gb/s."),(0,r.kt)("p",null,"[","[../images/RDMA_bandwidth.png|ARES RDMA Bandwidth]","]"),(0,r.kt)("p",null,"Memory bandwidth (",(0,r.kt)("a",{parentName:"p",href:"https://www.cs.virginia.edu/stream/"},"STREAM\nbenchmark"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Compute node (Lenovo): 49 GB/s\n(",(0,r.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1QQPs-NwI-tqaUmA3CnpztY3i2pkVujSAVoliSnTBlPQ/edit"},"reference"),")"),(0,r.kt)("li",{parentName:"ul"},"Storage node (Sun): 7GB/s\n(",(0,r.kt)("a",{parentName:"li",href:"https://docs.google.com/document/d/1jkOKFvc7ueLkP6kjJgOhgK7k-LMq-jMIaTVuHmTzA5M/edit"},"reference"),")")),(0,r.kt)("p",null,"Memory latency (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/torvalds/test-tlb"},"TLB benchmark"),"):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Huge/regular page seq: 7ns"),(0,r.kt)("li",{parentName:"ul"},"Huge page rand: 92 ns"),(0,r.kt)("li",{parentName:"ul"},"Regular page rand: 108 ns"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.google.com/spreadsheets/d/1piDh07T3fX5tlel4NdrsxvkFy_Ojopa1dbkN1X5AruE/edit#gid=0"},"numbers are\nfrom"))),(0,r.kt)("h4",{id:"storage"},"Storage"),(0,r.kt)("p",null,"Disk bandwidth (",(0,r.kt)("a",{parentName:"p",href:"https://fio.readthedocs.io/en/latest/fio_doc.html"},"fio"),"\nbenchmark):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ares.cs.iit.edu/baseline-perf/"},"test script can be found"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ares.cs.iit.edu/baseline-perf/local_disk/comp-samsung-nvme.html"},"Compute node (Samsung\nNVMe)"),"\n& ",(0,r.kt)("a",{parentName:"li",href:"https://ares.cs.iit.edu/baseline-perf/local_disk/comp-toshiba-nvme.html"},"Compute node (Toshiba\nNVMe)"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Read max: 2.5GB/s"),(0,r.kt)("li",{parentName:"ul"},"Write max: 1GB/s")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ares.cs.iit.edu/baseline-perf/local_disk/stor-ssd-pcie-sata.html"},"Storage node (Samsung SATA SSD) with PICe\nadapter"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Read/Write max: 400MB/s")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ares.cs.iit.edu/baseline-perf/local_disk/stor-hdd-sata.html"},"Storage node (Samsung SATA)\nHDD"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Read/Write max: 180MB/s")))),(0,r.kt)("h4",{id:"networking"},"Networking"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1bngw2dXIamtT7rvPcultBxF5lyhubNCmK2BkkIr5vAc/edit#gid=686223677"},"Numbers are\nfrom")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Direction"),(0,r.kt)("th",{parentName:"tr",align:null},"Latency (us)"),(0,r.kt)("th",{parentName:"tr",align:null},"Max Bandwidth (Gb/s)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Compute - compute node"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"37")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Compute - storage node"),(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Storage - storage node"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"12.5")))),(0,r.kt)("h2",{id:"chameleon-tacc"},"Chameleon (TACC)"),(0,r.kt)("p",null,"The Chameleon architecture consists of a set of standard cloud units\n(SCUs)."),(0,r.kt)("p",null,"[","[../images/Chameleon_Hardware_Summary.png|Chameleon - One Unit of SCU Hardware Summary]","]"),(0,r.kt)("h3",{id:"standard-cloud-units"},"Standard Cloud Units"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What kind of CPU(s)?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Each compute node is with 24 cores delivered in dual socket\nIntel Xeon E5-2670 v3 \u201cHaswell\u201d processors (each with 12 cores @\n2.3GHz)")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"How much memory and what kind?",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"128 GiB of DDR4 RAM.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What's the OS? (kernel version, etc.)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"OS is configurable by the user.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"How is the system configured? (file systems, networking, etc.)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Every switch in the research network is a fully OpenFlow\ncompliant programmable Dell S6000-ON switch."),(0,r.kt)("li",{parentName:"ul"},"Each node connects to this network at 10 Gbps, and each unit\nuplinks with 40Gbps per rack to the Chameleon core network."),(0,r.kt)("li",{parentName:"ul"},"The core switches (Dell S6000-ON) are connected by 40 Gbps\nEthernet links, which connect to the backbone 100Gbps services\nat both UC and TACC."),(0,r.kt)("li",{parentName:"ul"},"Chameleon also provides a shared storage system. The shared\nstorage provides more than 3.6PB of raw disk."),(0,r.kt)("li",{parentName:"ul"},"Heterogeneous Compute Hardware",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The heterogeneous hardware includes various technologies:\nGPU and FPGA accelerators, SSD and NVMe storage, low-power\nARM, Atom, and Xeon systems-on-a-chip."),(0,r.kt)("li",{parentName:"ul"},"The two storage hierarchy nodes have been designed to enable\nexperiments using multiple layers of caching: they are\nconfigured with 512 GiB of memory, two Intel P3700 NVMe of 2\nTB each, four Intel S3610 SSDs of 1.6 TB each, and four 15K\nSAS HDDs of 600 GB each.")))))),(0,r.kt)("h2",{id:"tier-characterization"},"Tier Characterization"),(0,r.kt)("p",null,"A tier is a class of storage devices that share certain characteristics\nincluding:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Symbol"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Unit"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"L"),(0,r.kt)("td",{parentName:"tr",align:null},"Latency"),(0,r.kt)("td",{parentName:"tr",align:null},"ns"),(0,r.kt)("td",{parentName:"tr",align:null},"How is it measured?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"B"),(0,r.kt)("td",{parentName:"tr",align:null},"Bandwidth"),(0,r.kt)("td",{parentName:"tr",align:null},"GB/s"),(0,r.kt)("td",{parentName:"tr",align:null},"How is it measured?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"C"),(0,r.kt)("td",{parentName:"tr",align:null},"Total capacity"),(0,r.kt)("td",{parentName:"tr",align:null},"GB"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Q"),(0,r.kt)("td",{parentName:"tr",align:null},"Request queue depth"),(0,r.kt)("td",{parentName:"tr",align:null},"n/a"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"The previous characteristics are considered constant during a Hermes\nsession. In addition, the following time-dependent characteristics are\nconsidered:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Symbol"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Unit"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"R"),(0,r.kt)("td",{parentName:"tr",align:null},"Remaining capacity"),(0,r.kt)("td",{parentName:"tr",align:null},"GB"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"F"),(0,r.kt)("td",{parentName:"tr",align:null},"Request queue fill"),(0,r.kt)("td",{parentName:"tr",align:null},"%"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,'To keep the terminology simple, we will refer to the storage devices of\na certain tier class collectively as "the tier."'),(0,r.kt)("p",null,"Tiers are (pairwise) disjoint, i.e., no storage device can belong to\nmore than one tier."),(0,r.kt)("p",null,"There are intra-tier and inter-tier connections (i.e., between tiers via\nsuitable buses or interconnects). Data transfer via these connections\nmay or may not require CPU intervention."),(0,r.kt)("p",null,'The grouping of storage devices into tiers has nothing to do with the\nphysical distribution of the devices. For example, the fact that two\nstorage devices are of RAM-class doesn\'t say anything about their\n"proximity", which is defined by the intra-tier connectivity.'),(0,r.kt)("h2",{id:"layer-level"},"Layer (Level?)"),(0,r.kt)("p",null,'In Hermes, it is intuitive to define the "storage device distance" of a\nstorage device from an application or permanent storage port, and\nstorage devices can be ranked or sorted by their distance from such a\nport. By grouping together storage devices of the same or similar\ndistance from a given port, one can identify ',(0,r.kt)("em",{parentName:"p"},"layers")," or ",(0,r.kt)("em",{parentName:"p"},"levels."),' The\ndistance is defined relative to a port: The storage world "looks"\ndifferent from different ports, i.e., the same storage device will\ngenerally have different distances from different ports. Since some of\nthe storage device characteristics which enter into the storage device\ndistance are time-dependent, the corrsponding layer structure is\ntime-dependent as well',"!"))}d.isMDXComponent=!0}}]);