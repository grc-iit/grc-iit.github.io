"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[6033],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),o=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=o(e.components);return i.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=o(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||r;return n?i.createElement(m,l(l({ref:t},c),{},{components:n})):i.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,l[1]=s;for(var o=2;o<r;o++)l[o]=n[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3421:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var i=n(7462),a=(n(7294),n(3905));const r={},l=void 0,s={unversionedId:"Jarvis/jarvis-cd/Getting-Started/Getting-Started",id:"Jarvis/jarvis-cd/Getting-Started/Getting-Started",title:"Getting-Started",description:"In this section, we will discuss the jarvis command line interface.",source:"@site/docs/05-Jarvis/02-jarvis-cd/02-Getting-Started/02-Getting-Started.md",sourceDirName:"05-Jarvis/02-jarvis-cd/02-Getting-Started",slug:"/Jarvis/jarvis-cd/Getting-Started/",permalink:"/docs/Jarvis/jarvis-cd/Getting-Started/",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"jarvis-cd",permalink:"/docs/Jarvis/jarvis-cd/jarvis-cd/"},next:{title:"Resource-Graph",permalink:"/docs/Jarvis/jarvis-cd/Resource-Graph/"}},p={},o=[],c={toc:o},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In this section, we will discuss the jarvis command line interface.\nWe will discuss the basic steps of how to create a deployment\npipeline. In this example, we will deploy only IOR, but more complex\npipelines with more applications deployed at once can be made."),(0,a.kt)("h1",{id:"101-setup"},"1.01. Setup"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"spack install ior\n")),(0,a.kt)("h1",{id:"102-define-the-job-hostfile"},"1.02. Define the Job Hostfile"),(0,a.kt)("p",null,"Before jarvis can be used to deploy, the hostfile must be provided."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis hostfile set [path-to-hostfile.txt]\n")),(0,a.kt)("p",null,"This hostfile is used by all jarvis deployments."),(0,a.kt)("p",null,"NOTE: If changes to the hostfile are made, re-run the above command.\nThis is because jarvis needs to reconfigure all pipelines to adjust\nto the changes in the hostfile. Systems, such as OrangeFS, require\nthe exact set of hosts in order to be deployed properly."),(0,a.kt)("h1",{id:"103-build-resource-graph"},"1.03. Build Resource Graph"),(0,a.kt)("p",null,"NOTE: This step is not needed for machines which have pre-configured\nresource graphs. Skip this step when deploying in Ares. Do this step\nwhen deploying on your personal machine."),(0,a.kt)("p",null,"First we have to collect information about the system. The resource-graph\nutility command depends on fi_info and lsblk. Make sure if these are not\nprovided by your machine, they are loaded."),(0,a.kt)("p",null,"To begin polling the system, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis resource-graph build +walkthrough\n")),(0,a.kt)("p",null,"This information will be stored under ${JARVIS_ROOT}/config/resource_graph.yaml.\nThe command uses SSH to connect to all pkgs. It will use the\nhostfile from the previous command and scan those pkgs."),(0,a.kt)("h1",{id:"104-create-an-empty-pipeline"},"1.04. Create an empty pipeline"),(0,a.kt)("p",null,'The following command will create an empty pipeline "my_pipeline":'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline create ior_test\n")),(0,a.kt)("p",null,"After creating a pipeline, jarvis will focus on that pipeline."),(0,a.kt)("h1",{id:"105-build-environment"},"1.05. Build Environment"),(0,a.kt)("p",null,"Next, we must make jarvis aware of all environment variables needed\nto execute applications in the pipeline."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline env build\n")),(0,a.kt)("p",null,"NOTE: this is machine-dependent. You would have to have these modules\ninstalled on your machine before-hand."),(0,a.kt)("p",null,'NOTE: LD_PRELOAD should NOT be one of the environment variables set here.\nJarvis has specific "Interceptor" pkgs for handling LD_PRELOAD.'),(0,a.kt)("h1",{id:"105-add-pkgs-to-the-pipeline"},"1.05. Add pkgs to the pipeline"),(0,a.kt)("p",null,"To add pkgs to the pipeline:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline append ior api=posix xfer=4k block=1m out=/tmp/ior.bin\n")),(0,a.kt)("h1",{id:"106-start-a-pipeline"},"1.06. Start a pipeline"),(0,a.kt)("p",null,"To start the service for the configured pipeline, do:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline run\n")),(0,a.kt)("h1",{id:"107-get-the-status-of-the-pipeline"},"1.07. Get the status of the pipeline"),(0,a.kt)("p",null,"To check whether the pipeline is functioning, do:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline status\n")),(0,a.kt)("p",null,"NOTE: This command is not always implemented"),(0,a.kt)("h1",{id:"108-clean-a-pipeline"},"1.08. Clean a pipeline"),(0,a.kt)("p",null,"Pipelines can create a bunch of data. For example, OrangeFS may contain\ndata leftover from a benchmark. To destroy this data, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline clean\n")),(0,a.kt)("h1",{id:"109-re-configuring-a-pkg"},"1.09. Re-configuring a pkg"),(0,a.kt)("p",null,"There may be cases where you need to reconfigure a pkg in the pipeline.\nTo do this, run configure:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pkg configure ior api=mpiio\n")),(0,a.kt)("h1",{id:"110-unlinking-and-removing-pkgs"},"1.10. Unlinking and removing pkgs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Unlinking a pkg means Jarvis will remove the pkg from the pipeline,\nwithout destroying the pkg's metadata. This will allow it to be\nre-appended in the future."),(0,a.kt)("li",{parentName:"ul"},"Removing a pkg means Jarvis will remove the pkg from the pipeline\nAND destroy its metadata.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pkg unlink [pkg_id]\njarvis pkg remove [pkg_id]\n")),(0,a.kt)("h1",{id:"111-changing-to-a-different-pipeline"},"1.11. Changing to a different pipeline"),(0,a.kt)("p",null,"To make jarvis start, end, etc. apply to a different pipeline,\nuse jarvis cd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis cd [pipeline_name]\n")),(0,a.kt)("h1",{id:"112-destroying-a-pipeline"},"1.12. Destroying a pipeline"),(0,a.kt)("p",null,"To destroy a pipeline, its pkgs, and all metadata associated with it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline destroy [pipeline_name (opt)]\n")),(0,a.kt)("p",null,"If no pipeline_name is provided, the current pipeline will be destroyed."),(0,a.kt)("h1",{id:"113-listing-existing-pipelines"},"1.13. Listing Existing Pipelines"),(0,a.kt)("p",null,"To list all existing pipelines, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline list\n")),(0,a.kt)("h1",{id:"114-viewing-the-pkgs-in-a-pipeline"},"1.14. Viewing the pkgs in a Pipeline"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline print\n")),(0,a.kt)("h1",{id:"115-viewing-the-contents-of-a-pipeline"},"1.15. Viewing the contents of a Pipeline"),(0,a.kt)("p",null,"This will print the contents of the pipeline's root directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ls `jarvis path`\n")),(0,a.kt)("h1",{id:"116-viewing-the-contents-of-a-package"},"1.16. Viewing the contents of a Package"),(0,a.kt)("p",null,"This will view the contents of the hermes package in the current pipeline."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ls `jarvis path`/hermes\n")),(0,a.kt)("h1",{id:"117-resetting-jarvis"},"1.17. Resetting Jarvis"),(0,a.kt)("p",null,"The following command will destroy the metadata for all pipelines in Jarvis.\nIt will ask for confirmation to avoid accidents."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"jarvis reset\n")),(0,a.kt)("h1",{id:"118-other-examples"},"1.18. Other Examples"),(0,a.kt)("p",null,"Each Jarvis repo contains its own README, which goes every specific examples.\nFor example, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/scs-lab/jarvis-cd/blob/master/builtin/builtin/gray_scott/README.md"},"gray_scott"),"\nshows an example of deploying over Hermes."))}u.isMDXComponent=!0}}]);