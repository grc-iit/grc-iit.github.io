"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[1751],{18654:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"jarvis/scspkg/getting-started","title":"Getting Started","description":"SCSPKG provides an infrastructures for installing packages manually.","source":"@site/docs/81-jarvis/03-scspkg/02-getting-started.md","sourceDirName":"81-jarvis/03-scspkg","slug":"/jarvis/scspkg/getting-started","permalink":"/docs/jarvis/scspkg/getting-started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SCSPKG","permalink":"/docs/jarvis/scspkg/index"},"next":{"title":"Ares Research Cluster","permalink":"/docs/category/ares-research-cluster"}}');var a=l(74848),i=l(28453);const r={},d="Getting Started",c={},o=[{value:"Create a Package",id:"create-a-package",level:2},{value:"Download, Compile, and Install Source Code",id:"download-compile-and-install-source-code",level:2},{value:"Load the Modulefile",id:"load-the-modulefile",level:2},{value:"What&#39;s in the Modulefile?",id:"whats-in-the-modulefile",level:2},{value:"Setting Environment Variables",id:"setting-environment-variables",level:2},{value:"Removing Environment Variables",id:"removing-environment-variables",level:2},{value:"Adding Module Dependencies",id:"adding-module-dependencies",level:2},{value:"Removing Module Dependencies",id:"removing-module-dependencies",level:2},{value:"Listing Module Dependencies",id:"listing-module-dependencies",level:2},{value:"Destroying Packages",id:"destroying-packages",level:2},{value:"Introspecting Environment Variables",id:"introspecting-environment-variables",level:2},{value:"Printing Environment Variables",id:"printing-environment-variables",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,a.jsx)(n.p,{children:"SCSPKG provides an infrastructures for installing packages manually.\nIt provides a structure to modulefiles so that you don't have to build them manually.\nIt's useful for when you're developing things or when spack fails.\nWe will go through an example which installs zlib."}),"\n",(0,a.jsx)(n.h2,{id:"create-a-package",children:"Create a Package"}),"\n",(0,a.jsx)(n.p,{children:"A package is a space where source code and configuration files will be stored.\nTo create a package, run the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg create zlib\n"})}),"\n",(0,a.jsx)(n.p,{children:"Packages have two important directories and one file:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["The root directory: where the compiled objects will be installed. It will be created at ",(0,a.jsx)(n.code,{children:"~/.scspkg/packages/${PACKAGE_NAME}"})]}),"\n",(0,a.jsxs)(n.li,{children:["The source directory: where compilation will occur and where source code is stored. It will be created at ",(0,a.jsx)(n.code,{children:"~/.scspkg/pacakges/${PACKAGE_NAME}/src"})]}),"\n",(0,a.jsxs)(n.li,{children:["The modulefile: the modulefile for this package. It will be created at ",(0,a.jsx)(n.code,{children:"~/.scspkg/modulefiles/${PACKAGE_NAME}"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"download-compile-and-install-source-code",children:"Download, Compile, and Install Source Code"}),"\n",(0,a.jsx)(n.p,{children:"First, we cd into the package's source directory and unpack zlib"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd $(scspkg pkg src zlib)\nwget https://www.zlib.net/zlib-1.3.1.tar.gz\ntar -xzf zlib-1.3.1.tar.gz\ncd zlib-1.3.1\n"})}),"\n",(0,a.jsx)(n.p,{children:"Next, we configure zlib to store the installed files in the package's root directory."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"./configure --prefix=$(scspkg pkg root zlib)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Lastly, we compile and install zlib."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"make -j8\nmake install\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can then view the installed files here:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ls $(scspkg pkg root zlib)/lib\n"})}),"\n",(0,a.jsx)(n.h2,{id:"load-the-modulefile",children:"Load the Modulefile"}),"\n",(0,a.jsx)(n.p,{children:"You can then load the produced modulefile as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"module load zlib\n"})}),"\n",(0,a.jsx)(n.p,{children:"You will now be able to link against zlib"}),"\n",(0,a.jsx)(n.p,{children:"To undo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"module unload zlib\n"})}),"\n",(0,a.jsx)(n.h2,{id:"whats-in-the-modulefile",children:"What's in the Modulefile?"}),"\n",(0,a.jsx)(n.p,{children:"The modulefile primarily stores environment variables.\nThe modulefile will store the following by default: PATH, LD_LIBRARY_PATH, LIBRARY_PATH, INCLUDE, CPATH, CFLAGS, LDFLAGS."}),"\n",(0,a.jsx)(n.p,{children:"If other environment variables are needed, they'll have to be added manually."}),"\n",(0,a.jsx)(n.p,{children:"To view the modulefile contents:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg module show zlib\n"})}),"\n",(0,a.jsx)(n.p,{children:"To get the modulefile path:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg module path zlib\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-environment-variables",children:"Setting Environment Variables"}),"\n",(0,a.jsx)(n.p,{children:"There two ways to set environment variables:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Set environment variable"}),"\n",(0,a.jsx)(n.li,{children:"Prepend environment variable"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg env prepend zlib MYPREPEND '25' '26' '27'\nscspkg env set zlib MYSET='25'\nmodule load zlib\necho $MYPREPEND\necho $MYSET\nmodule unload zlib\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"27:26:25\n25\n"})}),"\n",(0,a.jsx)(n.h2,{id:"removing-environment-variables",children:"Removing Environment Variables"}),"\n",(0,a.jsx)(n.p,{children:"There are two ways to remove environment variables"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Remove environment variable"}),"\n",(0,a.jsx)(n.li,{children:"Remove path prepend"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg env unset zlib MYSET\nscspkg env pop zlib MYPREPEND 25 26\nmodule load zlib\necho $MYSET\necho $MYPREPEND\nmodule unload zlib\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"\n27\n"})}),"\n",(0,a.jsx)(n.h2,{id:"adding-module-dependencies",children:"Adding Module Dependencies"}),"\n",(0,a.jsx)(n.p,{children:"Sometimes modulefiles may depend on other modules to be loaded."}),"\n",(0,a.jsx)(n.p,{children:"For example, let's say we have the following two packages:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg create app1\nscspkg env set app1 APP1='APP1'\nscspkg create app2\nscspkg env set app2 APP2='APP2'\nscspkg create app3\nscspkg env set app3 APP3='APP3'\n"})}),"\n",(0,a.jsx)(n.p,{children:"Let's say app3 depends on app1 and app2"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg dep add app3 app1 app2\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can then load all app1, app2, and app3 as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"module load app3\n"})}),"\n",(0,a.jsx)(n.p,{children:"We can verify this works:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"module load app3\necho $APP1 $APP2 $APP3\nmodule unload app3\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"APP1 APP2 APP3\n"})}),"\n",(0,a.jsx)(n.h2,{id:"removing-module-dependencies",children:"Removing Module Dependencies"}),"\n",(0,a.jsx)(n.p,{children:"Continuing from 1.6., we can remove module dependencies as follows"}),"\n",(0,a.jsx)(n.p,{children:"We can remove app1 as a dependency of app3 as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg dep pop app3 app1\nmodule load app3\necho $APP1 $APP2 $APP3\nmodule unload app3\n"})}),"\n",(0,a.jsx)(n.p,{children:"Output:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"APP2 APP3\n"})}),"\n",(0,a.jsx)(n.h2,{id:"listing-module-dependencies",children:"Listing Module Dependencies"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg dep list\n"})}),"\n",(0,a.jsx)(n.h2,{id:"destroying-packages",children:"Destroying Packages"}),"\n",(0,a.jsx)(n.p,{children:"To destroy the contents of a package (including source code):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg create test\nscspkg destroy test\n"})}),"\n",(0,a.jsx)(n.h2,{id:"introspecting-environment-variables",children:"Introspecting Environment Variables"}),"\n",(0,a.jsx)(n.p,{children:"The following will collect relevant environment variables (LD_LIBRARY_PATH, etc) and then dump them into the modulefile.\nThis can help avoid calling spack load repeatedly."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg create test\nscspkg build profile test\n"})}),"\n",(0,a.jsx)(n.h2,{id:"printing-environment-variables",children:"Printing Environment Variables"}),"\n",(0,a.jsx)(n.p,{children:"The following will print the current environment and store it in a way that is accessible by an IDE:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"scspkg build profile\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>d});var s=l(96540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);