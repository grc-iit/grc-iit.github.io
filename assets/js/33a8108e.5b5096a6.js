"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[6932],{93618:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"iowarp/components/ipc/introspect","title":"Introspect","description":"This code provides compatability between operating systems for certain APIs.","source":"@site/docs/11-iowarp/03-components/02-ipc/04-introspect.md","sourceDirName":"11-iowarp/03-components/02-ipc","slug":"/iowarp/components/ipc/introspect","permalink":"/docs/iowarp/components/ipc/introspect","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Shared Memory Allocators","permalink":"/docs/iowarp/components/ipc/shared-memory"},"next":{"title":"Thread","permalink":"/docs/iowarp/components/ipc/thread"}}');var i=t(74848),r=t(28453);const o={},c="Introspect",a={},p=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"CPU Introspection",id:"cpu-introspection",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introspect",children:"Introspect"})}),"\n",(0,i.jsx)(n.p,{children:"This code provides compatability between operating systems for certain APIs.\nHere we will discuss the APIs used most commonly across projects."}),"\n",(0,i.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"HSHM_DLL static std::string Getenv(\n    const char *name, size_t max_size = hshm::Unit<size_t>::Megabytes(1));\n\nstatic std::string Getenv(\n    const std::string &name,\n    size_t max_size = hshm::Unit<size_t>::Megabytes(1));\n\nHSHM_DLL static void Setenv(const char *name, const std::string &value,\n                            int overwrite);\n\nHSHM_DLL static void Unsetenv(const char *name);\n"})}),"\n",(0,i.jsx)(n.p,{children:"These apis are self-explanatory. They provide portable ways to access environment\nvariables."}),"\n",(0,i.jsx)(n.h2,{id:"cpu-introspection",children:"CPU Introspection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"HSHM_DLL void RefreshCpuFreqKhz();\n\nHSHM_DLL size_t GetCpuFreqKhz(int cpu);\n\nHSHM_DLL size_t GetCpuMaxFreqKhz(int cpu);\n\nHSHM_DLL size_t GetCpuMinFreqKhz(int cpu);\n\nHSHM_DLL size_t GetCpuMinFreqMhz(int cpu);\n\nHSHM_DLL size_t GetCpuMaxFreqMhz(int cpu);\n\nHSHM_DLL void SetCpuFreqMhz(int cpu, size_t cpu_freq_mhz);\n\nHSHM_DLL void SetCpuFreqKhz(int cpu, size_t cpu_freq_khz);\n\nHSHM_DLL void SetCpuMinFreqKhz(int cpu, size_t cpu_freq_khz);\n\nHSHM_DLL void SetCpuMaxFreqKhz(int cpu, size_t cpu_freq_khz);\n"})}),"\n",(0,i.jsx)(n.p,{children:"These APIs only have effect on Linux. They relate\nto the ability to get and set CPU frequency. This\nis useful for various reasons. For example,\nenergy efficiency algorithms can lower CPU frequency\nto handle low priority tasks."})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);