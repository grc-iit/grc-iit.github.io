"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[1982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=o,m=p["".concat(l,".").concat(d)]||p[d]||h[d]||a;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},s="SSH",i={unversionedId:"hpc-tutorials/linux-introduction/ssh",id:"hpc-tutorials/linux-introduction/ssh",title:"SSH",description:"SSH is a secure way of connecting to a remote machine. SSH relies on public-private key cryptography to secure",source:"@site/docs/02-hpc-tutorials/01-linux-introduction/03-ssh.md",sourceDirName:"02-hpc-tutorials/01-linux-introduction",slug:"/hpc-tutorials/linux-introduction/ssh",permalink:"/docs/hpc-tutorials/linux-introduction/ssh",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics of using a Terminal",permalink:"/docs/hpc-tutorials/linux-introduction/using-a-terminal"},next:{title:"Installing HPC Software",permalink:"/docs/category/installing-hpc-software"}},l={},c=[{value:"Creating the keys",id:"creating-the-keys",level:2},{value:"Ensuring permissions",id:"ensuring-permissions",level:2},{value:"How does <code>chmod</code> work?",id:"how-does-chmod-work",level:3},{value:"Key registration",id:"key-registration",level:2},{value:"Connecting to a machine",id:"connecting-to-a-machine",level:2}],u={toc:c},p="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ssh"},"SSH"),(0,o.kt)("p",null,"SSH is a secure way of connecting to a remote machine. SSH relies on public-private key cryptography to secure\nthe connection. The private key is a secret that only you should know. The public key should be given to other\npeople. Generally, RSA is used as the algorithm for generating keys. SSH is the backbone of most HPC machines.\nYou cannot access these machines without knowing how SSH works, so we introduce it here."),(0,o.kt)("p",null,"The following guide will demonstrate how to setup SSH for connecting to an SSH server. This guide does NOT\ndiscuss how to spawn an SSH server."),(0,o.kt)("h2",{id:"creating-the-keys"},"Creating the keys"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"SSH keys can be given passwords, but we recommend against."),' We consider the SSH key itself to be secret enough\nthat a password is completely unnecessary. This is referred to as "passwordless-ssh". Passwordless-ssh is required\nfor many HPC programs.'),(0,o.kt)("p",null,"To create a public/private key pair, run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen\n")),(0,o.kt)("p",null,"The default names for the keys are as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'The private key is "',(0,o.kt)("inlineCode",{parentName:"li"},"~/.ssh/id_rsa"),'"'),(0,o.kt)("li",{parentName:"ol"},'The public key is "',(0,o.kt)("inlineCode",{parentName:"li"},"~/.ssh/id_rsa.pub"),'"')),(0,o.kt)("p",null,"You can use other names (it doesn't have to be id_rsa), but we recommend against this in general. Many SSH-based\ntools become cumbersome with keys which are non-default."),(0,o.kt)("h2",{id:"ensuring-permissions"},"Ensuring permissions"),(0,o.kt)("p",null,"SSH is very particular about the permissions of the ~/.ssh directory and the files in that directory. Below describes\nthe permissions that need to be set to make SSH behave."),(0,o.kt)("p",null,'For convenience, feel free to copy-paste this. A detailed description of what these do is under "How does chmod work?"'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod 700 ${HOME}/.ssh\nsudo chmod 644 ${HOME}/.ssh/id_rsa.pub\nsudo chmod 600 ${HOME}/.ssh/id_rsa\nsudo chmod 600 ${HOME}/.ssh/authorized_keys\nsudo chmod 600 ${HOME}/.ssh/config\n")),(0,o.kt)("h3",{id:"how-does-chmod-work"},"How does ",(0,o.kt)("inlineCode",{parentName:"h3"},"chmod")," work?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"chmod"),' stands for "change mode". It has the following syntax:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod [mode] [path]\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'"mode" is a 3-digit code.'),(0,o.kt)("li",{parentName:"ul"},"Each digit is between 0 and 7"),(0,o.kt)("li",{parentName:"ul"},"The digits have the following meaning: ","[owner][group]"," ","[user]"),(0,o.kt)("li",{parentName:"ul"},"owner: typically you"),(0,o.kt)("li",{parentName:"ul"},"group: files can be apart of a group. Only one group per file or directory."),(0,o.kt)("li",{parentName:"ul"},"user: typically anyone other than you")),(0,o.kt)("p",null,"A single digit can have the following values:"),(0,o.kt)("ol",{start:0},(0,o.kt)("li",{parentName:"ol"},"No permissions"),(0,o.kt)("li",{parentName:"ol"},"Execute only"),(0,o.kt)("li",{parentName:"ol"},"Write only"),(0,o.kt)("li",{parentName:"ol"},"Write and execute (2 + 1 = 3)"),(0,o.kt)("li",{parentName:"ol"},"Read only"),(0,o.kt)("li",{parentName:"ol"},"Read and execute (4 + 1 = 5)"),(0,o.kt)("li",{parentName:"ol"},"Read and write (4 + 2 = 6)"),(0,o.kt)("li",{parentName:"ol"},"Read, write, and execute (4 + 2 + 1 = 7)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# The SSH directory\n# Owner has read, write, execute permissions.\n# No one else can touch this directory.\nsudo chmod 700 ${HOME}/.ssh\n\n# The public key\n# Owner has read + write permissions.\n# Other users can read this file\nsudo chmod 644 ${HOME}/.ssh/id_rsa.pub\n\n# The private key\n# Owner has read + write permissions\n# Nobody else has permissions\nsudo chmod 600 ${HOME}/.ssh/id_rsa\n\n# Authorized keys\n# Owner has read + write permissions\n# Nobody else has permissions\nsudo chmod 600 ${HOME}/.ssh/authorized_keys\n\n# User Config\n# Owner has read + write permissions\n# Nobody else has permissions\nsudo chmod 600 ${HOME}/.ssh/config\n")),(0,o.kt)("h2",{id:"key-registration"},"Key registration"),(0,o.kt)("p",null,"Your key will then have to be registered with the SSH server. This is typically done using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ssh-copy-id"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-copy-id -f -i ~/.ssh/id_rsa [USERNAME]@[IP]\n")),(0,o.kt)("p",null,"If the machine has a custom port number, the command's syntax is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-copy-id -f -i ~/.ssh/id_rsa -p [PORT] [USERNAME]@[IP]\n")),(0,o.kt)("h2",{id:"connecting-to-a-machine"},"Connecting to a machine"),(0,o.kt)("p",null,'To connect to a machine, use the "',(0,o.kt)("inlineCode",{parentName:"p"},"ssh"),'" command. The command roughly has the following syntax:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -p [PORT] -i [PRIVATE_KEY] [USERNAME]@[IP]\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"[PORT]",": Default is 22."),(0,o.kt)("li",{parentName:"ul"},"[PRIVATE_KEY]",": Default is ~/id_rsa"),(0,o.kt)("li",{parentName:"ul"},"[USERNAME]",": Default is the current user"),(0,o.kt)("li",{parentName:"ul"},"[IP]",": The IP address or host name of the machine")),(0,o.kt)("p",null,"Generally, if everything is default (SSH key, port number), the command would look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh [USERNAME]@[IP]\n")))}h.isMDXComponent=!0}}]);