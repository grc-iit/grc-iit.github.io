"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[4501],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={},o="Dependencies",l={unversionedId:"Jarvis/jarvis-cd/Packages/CM1",id:"Jarvis/jarvis-cd/Packages/CM1",title:"Dependencies",description:"* output_dir: the directory where simulation output goes",source:"@site/docs/05-Jarvis/02-jarvis-cd/08-Packages/01-CM1.md",sourceDirName:"05-Jarvis/02-jarvis-cd/08-Packages",slug:"/Jarvis/jarvis-cd/Packages/CM1",permalink:"/docs/Jarvis/jarvis-cd/Packages/CM1",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pipeline-Python-API",permalink:"/docs/Jarvis/jarvis-cd/Pipelines-with-Python/Pipeline-Python-API"},next:{title:"Dependencies",permalink:"/docs/Jarvis/jarvis-cd/Packages/DeepDriveMD"}},s={},c=[],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dependencies"},"Dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"spack install intel-oneapi-compilers\nspack load intel-oneapi-compilers\nspack compilers add\nspack install h5z-zfp%intel\n")),(0,a.kt)("h1",{id:"compiling--installing"},"Compiling / Installing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:lukemartinlogan/cm1r19.8-LOFS.git\ncd cm1r19.8-LOFS\n# COREX * COREY is the number of cores you intend to use on the system\n# They do not need to be 2 and 2 here, but this is how our configurations are compiled for now\nCOREX=2 COREY=2 bash buildCM1-spack.sh\nexport PATH=${PWD}/run:${PATH}\nexport CM1_PATH=${PWD}\n")),(0,a.kt)("h1",{id:"general-usage"},"General Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mpirun -n [COREX * COREY] ${CM1_PATH}/run/cm1.exe [namelist.input] [output_dir] [filename_base] [restart_dir]\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"output_dir: the directory where simulation output goes"),(0,a.kt)("li",{parentName:"ul"},"filename_base: the name of the simulation file to generate"),(0,a.kt)("li",{parentName:"ul"},"restart_dir: a directory to store checkpoints for a restart (I believe)")),(0,a.kt)("h1",{id:"brief-overview-of-namelistinput"},"Brief overview of namelist.input"),(0,a.kt)("p",null,"The following variables define the dimensions of a 3D grid"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nx           =      16,\nny           =      16,\nnz           =      16,\n")),(0,a.kt)("p",null,"I set them lower to reduce extreme memory consumption in single-node cases."),(0,a.kt)("p",null,"These variables must be set relatively to COREX and COREY."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," nodex        =       2, !nuke\n nodey        =       2, !nuke\n rankx        =       2,\n ranky        =       2,\n")),(0,a.kt)("p",null,"You must satisfy the following constraints when setting these:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"rankx ",(0,a.kt)("em",{parentName:"li"}," ranky = COREX ")," COREY"),(0,a.kt)("li",{parentName:"ol"},"rankx > corex and ranky > corey")),(0,a.kt)("h1",{id:"radiative-convective-equilibrium"},"Radiative Convective Equilibrium"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ${CM1_PATH}/run/config_files/cpm_RadConvEquil\nmkdir output\nmpirun -n 4 ${CM1_PATH}/run/cm1.exe  ${CM1_PATH}/run/namelist.input.nssl3 output ex output\n")),(0,a.kt)("h1",{id:"near-future"},"Near Future"),(0,a.kt)("p",null,"Make a jarvis-cd package to automate all of these odd constraints for benchmarking and deployment"))}d.isMDXComponent=!0}}]);