"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[6939],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={},o="Design & Motivation",s={unversionedId:"jarvis/jarvis-cd/design-motivation",id:"jarvis/jarvis-cd/design-motivation",title:"Design & Motivation",description:"First we will describe how jarvis-cd is organized and the files that it creates.",source:"@site/docs/05-jarvis/02-jarvis-cd/04-design-motivation.md",sourceDirName:"05-jarvis/02-jarvis-cd",slug:"/jarvis/jarvis-cd/design-motivation",permalink:"/docs/jarvis/jarvis-cd/design-motivation",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Resource Graph",permalink:"/docs/jarvis/jarvis-cd/resource-graph"},next:{title:"Custom Repos",permalink:"/docs/jarvis/jarvis-cd/custom-repos"}},l={},p=[{value:"Jarvis Config",id:"jarvis-config",level:2},{value:"<code>Pkg</code>s",id:"pkgs",level:2},{value:"Pipelines",id:"pipelines",level:2},{value:"Service Pkgs",id:"service-pkgs",level:2},{value:"Application Pkgs",id:"application-pkgs",level:2},{value:"Interceptor Pkgs",id:"interceptor-pkgs",level:2},{value:"Pipeline Metadata",id:"pipeline-metadata",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"design--motivation"},"Design & Motivation"),(0,a.kt)("p",null,"First we will describe how ",(0,a.kt)("inlineCode",{parentName:"p"},"jarvis-cd")," is organized and the files that it creates."),(0,a.kt)("h2",{id:"jarvis-config"},"Jarvis Config"),(0,a.kt)("p",null,"The Jarvis configuration file is stored under ",(0,a.kt)("inlineCode",{parentName:"p"},"${JARVIS_ROOT}/config/jarvis_config.yaml"),".\nIt stores the ",(0,a.kt)("inlineCode",{parentName:"p"},"${CONFIG_DIR}"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"${PRIVATE_DIR}"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"${SHARED_DIR}")," variables described in the Home page.\nAdditionally, it stores the currently-active hostfile and the set of repos to search for pkgs.\nThis file essentially determines where Jarvis will store metadata for pipelines."),(0,a.kt)("p",null,"The resource graph for the current machine is stored under ",(0,a.kt)("inlineCode",{parentName:"p"},"${JARVIS_ROOT}/config/resource_graph.yaml"),".\nThe resource graph stores information about the machine state, including hardware and networks."),(0,a.kt)("h2",{id:"pkgs"},(0,a.kt)("inlineCode",{parentName:"h2"},"Pkg"),"s"),(0,a.kt)("p",null,'Jarvis-cd deploys complex applications. In Jarvis, we consider applications\n"',(0,a.kt)("inlineCode",{parentName:"p"},"pkg"),'s". ',(0,a.kt)("inlineCode",{parentName:"p"},"Pkg"),"s can be connected to form a pipeline, which is a series of\napplications to deploy all at once."),(0,a.kt)("p",null,"Jarvis has three general ",(0,a.kt)("inlineCode",{parentName:"p"},"pkg")," types:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Service: a program which runs forever, until forcibly stopped."),(0,a.kt)("li",{parentName:"ol"},"Application: a program which runs to a definite completion.\nFor example, run IOR over OrangeFS, BeeGFS, and Hermes."),(0,a.kt)("li",{parentName:"ol"},"Interceptor: Used to intercept code for a benchmark or storage system.")),(0,a.kt)("h2",{id:"pipelines"},"Pipelines"),(0,a.kt)("p",null,"Jarvis-cd provides a CLI to create pipelines. A pipeline specifies an\nordered set of configured pkgs to execute. An example of a jarvis pipeline\nwould be as follows:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"example-pipeline",src:n(596).Z,width:"962",height:"128"})),(0,a.kt)("h2",{id:"service-pkgs"},"Service Pkgs"),(0,a.kt)("p",null,"Service pkgs represent long-running applications. An example would be a storage system."),(0,a.kt)("p",null,"Storage systems have complex configurations:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"What pkgs do metadata servers go on?"),(0,a.kt)("li",{parentName:"ol"},"What pkgs do storage server go on?"),(0,a.kt)("li",{parentName:"ol"},"What storage devices do we use?"),(0,a.kt)("li",{parentName:"ol"},"What interface should the storage device expose? Filesystem? Block device?"),(0,a.kt)("li",{parentName:"ol"},"What networking protocol do we use?"),(0,a.kt)("li",{parentName:"ol"},"How many threads to use?"),(0,a.kt)("li",{parentName:"ol"},"The list goes on and on.")),(0,a.kt)("p",null,"To make matters worse, each storage system has different ways to represent this\ninformation. Each machine has different paths, different network cards,\ndifferent IPs, etc. How do we simplify the deployment of these complex systems?"),(0,a.kt)("p",null,"At the end of the day, there's no way to get around having a configuration\nfile. For each storage system, we store configuration files. These\nfiles are stored in the ",(0,a.kt)("inlineCode",{parentName:"p"},"${PRIVATE_DIR}")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"${SHARED_DIR}")," directories stored\nin the jarvis configuration."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline create ofs-global\njarvis pipeline append orangefs\njarvis pipeline start &\njarvis pipeline stop\n")),(0,a.kt)("h2",{id:"application-pkgs"},"Application Pkgs"),(0,a.kt)("p",null,"Applications can include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"benchmarks"),(0,a.kt)("li",{parentName:"ul"},"simulation codes")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline create my-benchmark\njarvis cd my-benchmark\njarvis pipeline append orangefs\njarvis pipeline append hermes\njarvis pipeline append ior\n")),(0,a.kt)("h2",{id:"interceptor-pkgs"},"Interceptor Pkgs"),(0,a.kt)("p",null,"A library can be used to intercept or monitor some functionality of an\napplication. For example, a library may include"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis pipeline create my-app\njarvis cd my-app\njarvis pipeline append orangefs \\\n  client_path=${HOME}/llogan/pfs\njarvis pipeline append hermes\njarvis pipeline append monitor\njarvis pipeline append qmcpack\njarvis pipeline run\n")),(0,a.kt)("h2",{id:"pipeline-metadata"},"Pipeline Metadata"),(0,a.kt)("p",null,"When creating a pipeline, metadata for the pipeline will be created under\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"${CONFIG_DIR}")," from the jarvis config."),(0,a.kt)("p",null,"The metadata for the currently-focused pipeline."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis create my-pipeline\nls `jarvis path`\n")),(0,a.kt)("p",null,"This will print all folders and files relevant to ",(0,a.kt)("inlineCode",{parentName:"p"},"my-pipeline"),"."),(0,a.kt)("p",null,"When adding pkgs to the pipeline, sub-folders will be created for each individual pkg.\nFor example, the following will print all files used by the hermes pkg."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis append hermes\nls `jarvis path`/hermes\n")))}m.isMDXComponent=!0},596:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/pipeline-21a856e8de047016ac3c349d400a9942.svg"}}]);