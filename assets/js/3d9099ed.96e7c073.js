"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[5592],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=p(r),u=a,f=h["".concat(c,".").concat(u)]||h[u]||m[u]||i;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[h]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8818:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={},o="Prefetcher",l={unversionedId:"hermes/components/prefetcher",id:"hermes/components/prefetcher",title:"Prefetcher",description:"The objective of the Prefetcher is to promote and demote content which is",source:"@site/docs/03-hermes/06-components/09-prefetcher.md",sourceDirName:"03-hermes/06-components",slug:"/hermes/components/prefetcher",permalink:"/docs/hermes/components/prefetcher",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Distributed Metadata",permalink:"/docs/hermes/components/distributed-metadata"},next:{title:"Examples",permalink:"/docs/hermes/components/examples"}},c={},p=[{value:"Usage (Configuration)",id:"usage-configuration",level:2},{value:"Usage (C++)",id:"usage-c",level:2},{value:"Application Tracing",id:"application-tracing",level:2},{value:"Apriori Prefetcher",id:"apriori-prefetcher",level:2},{value:"Future Work",id:"future-work",level:2}],s={toc:p},h="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(h,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"prefetcher"},"Prefetcher"),(0,a.kt)("p",null,"The objective of the ",(0,a.kt)("strong",{parentName:"p"},"Prefetcher")," is to promote and demote content which is\nexpected to be used in the near future or frequently. The prefetcher only\napplies to data which is already staged within Hermes. In order to activate\nprefetching, a Prefetcher Trait can be attached to a Tag (or Bucket)\nto indicate that prefetching should be enabled and which kind of prefetching\nshould be applied."),(0,a.kt)("h2",{id:"usage-configuration"},"Usage (Configuration)"),(0,a.kt)("p",null,"To enable prefetching with configuration."),(0,a.kt)("h2",{id:"usage-c"},"Usage (C++)"),(0,a.kt)("p",null,"To enable prefetching, attach the Prefetcher trait to a tag (e.g., Bucket).\nIn this example, we attach the PrefetcherTrait with the kApriori prefetcher\nconstant to the SimulationBucket, which represents the data for\nthe simulation workload."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'auto bkt = HERMES->GetBucket("SimulationBucket");\nTagId bkt_id = bkt.GetId();\nhermes::TraitId apriori_trait =\n    HERMES->RegisterTrait<hermes::PrefetcherTrait>(\n      "apriori", hermes::PrefetcherType::kApriori);\nTraitId trait_id = HERMES->GetTraitId("apriori");\nbkt.AttachTrait(apriori_trait);\n')),(0,a.kt)("h2",{id:"application-tracing"},"Application Tracing"),(0,a.kt)("p",null,"In order to support prefetching, we implement a tracing system within Hermes.\nThe tracer is called for every Put and Get operation within Hermes. It stores\nthe information called for the Put or Get internally within a multiple-producer\nsingle-consumer (MPSC) shared-memory queue, which is asynchronously digested\nby the prefetcher."),(0,a.kt)("p",null,"The tracer collects the following information:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Operation (Put or Get)"),(0,a.kt)("li",{parentName:"ol"},"Blob Id"),(0,a.kt)("li",{parentName:"ol"},"Bucket Id"),(0,a.kt)("li",{parentName:"ol"},"Blob Size"),(0,a.kt)("li",{parentName:"ol"},"Timestamp (from program start)"),(0,a.kt)("li",{parentName:"ol"},"Rank (if MPI)")),(0,a.kt)("p",null,"In the binary file, we store the following information:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Operation (Put or Get)"),(0,a.kt)("li",{parentName:"ol"},"Blob Name (64-bit Hash)"),(0,a.kt)("li",{parentName:"ol"},"Bucket Name (64-bit Hash)"),(0,a.kt)("li",{parentName:"ol"},"Blob Size (64-bit)"),(0,a.kt)("li",{parentName:"ol"},"Timestamp (from program start)"),(0,a.kt)("li",{parentName:"ol"},"Rank (if MPI)")),(0,a.kt)("p",null,"The trace can be analyzed live within the prefetcher or be stored in a\nbinary log (created using Cereal) and analyzed offline."),(0,a.kt)("h2",{id:"apriori-prefetcher"},"Apriori Prefetcher"),(0,a.kt)("p",null,"Currently, we implement the apriori prefetcher. Many applications exhibit\ncompletely deterministic I/O patterns. Deep Learning applications for example\nwill have the same I/O pattern when the randomness seed is fixed and all other\nparamters remain the same. Many HPC workloads are executed repeatedly with the\nsame parameters for reasons such as reproducability. This prefetcher assumes\nthat the user will supply a schema with the exact momements of when to\npromote and demote content."),(0,a.kt)("h2",{id:"future-work"},"Future Work"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Live Prefetcher: Use some sort of short-term memory models to analyze I/O\nstatistics generated live.")))}m.isMDXComponent=!0}}]);