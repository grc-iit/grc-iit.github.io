"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[23005],{73261:e=>{e.exports=JSON.parse('{"abstract":"In this paper, we consider to improve scientific workflows in cloud environments where data transfers between tasks are\\nperformed via provisioned in-memory caching as a service, instead of relying entirely on slower disk-based file systems. However, this\\nimprovement is not free since services in the cloud are usually charged in a \\"pay-as-you-go\\" model. As a consequence, the workflow\\ntenants have to estimate the amount of memory that they would like to pay. Given the intrinsic complexity of the workflows, it would be\\nvery hard to make an accurate prediction, which would lead to either oversubscription or undersubscription, resulting in unproductive\\nspending or performance degradation. To address this problem, we propose a concept of minmax memory claim (MMC) to achieve\\ncost-effective workflow computations in in-memory cloud computing environments. The minmax-memory claim is defined as the\\nminimum amount of memory required to finish the workflow without compromising its maximum concurrency. With the concept of\\nMMC, the workflow tenants can achieve the best performance via in-memory computing while minimizing the cost. In this paper, we\\npresent the procedure of how to find the MMCs for those workflows with arbitrary graphs in general and develop optimal efficient\\nalgorithms for some well-structured workflows in particular. To further show the values of this concept, we also implement these\\nalgorithms and apply them, through a simulation study, to improve deadlock resolutions in workflow-based workloads when memory\\nresources are constrained.","authors":["S. He","Y. Wang","X.-H. Sun","C. Xu"],"date":"April, 2017","doi":"10.1109/tpds.2016.2614294","links":{"bibtex":"http://cs.iit.edu/~scs/assets/files/he2017using.bib","citation":"http://cs.iit.edu/~scs/assets/files/he2017using.txt","doi":"https://doi.org/10.1109/TPDS.2016.2614294","pdf":"http://cs.iit.edu/~scs/assets/files/Sbing_MinMAX-Memory17.pdf"},"month":4,"slug":"he-2017-using-minmax-f6c6","tags":[],"title":"Using MinMax-Memory Claims to Improve In-Memory Workflow Computations in the Cloud","type":"Journal","venue":"IEEE Transactions on Parallel and Distributed Systems (TPDS), 2017. vol. 28, no. 4, pp. 1202-1204","year":2017}')}}]);