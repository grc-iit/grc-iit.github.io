"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[5560],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,d=u["".concat(s,".").concat(m)]||u[m]||h[m]||o;return r?a.createElement(d,i(i({ref:t},p),{},{components:r})):a.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2462:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={},i=void 0,l={unversionedId:"Jarvis/jarvis-cd/Resource-Graph/Resource-Graph",id:"Jarvis/jarvis-cd/Resource-Graph/Resource-Graph",title:"Resource-Graph",description:"A resource graph contains a snapshot of the state of a cluster. This",source:"@site/docs/05-Jarvis/02-jarvis-cd/03-Resource-Graph/03-Resource-Graph.md",sourceDirName:"05-Jarvis/02-jarvis-cd/03-Resource-Graph",slug:"/Jarvis/jarvis-cd/Resource-Graph/",permalink:"/docs/Jarvis/jarvis-cd/Resource-Graph/",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting-Started",permalink:"/docs/Jarvis/jarvis-cd/Getting-Started/"},next:{title:"Design-&-Motivation",permalink:"/docs/Jarvis/jarvis-cd/Design-&-Motivation/"}},s={},c=[],p={toc:c},u="wrapper";function h(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A resource graph contains a snapshot of the state of a cluster. This\nnormalizes machine-specific information which common across jarvis\nrepos. Resource graphs provide query interfaces which avoid having to\nrepeat the same paths all over the place. This section describes the\ncontents of a resource graph and the API available to Jarvis repos."),(0,n.kt)("h1",{id:"21-resource-graph-contents"},"2.1. Resource Graph Contents"),(0,n.kt)("p",null,"The resource graph contains information about the cluster hardware:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Block devices"),(0,n.kt)("li",{parentName:"ol"},"Device partitions"),(0,n.kt)("li",{parentName:"ol"},"Filesystem mount points"),(0,n.kt)("li",{parentName:"ol"},"Capacities"),(0,n.kt)("li",{parentName:"ol"},"Network protocols")),(0,n.kt)("p",null,"NOTE: The resource-graph utility command depends on:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"fi_info"),(0,n.kt)("li",{parentName:"ul"},"lsblk"),(0,n.kt)("li",{parentName:"ul"},"df")),(0,n.kt)("p",null,"If libfabric is installed through spack, please load it before continuing."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"spack load libfabric\n")),(0,n.kt)("h1",{id:"22-building-a-resource-graph-automatically"},"2.2. Building a Resource Graph Automatically"),(0,n.kt)("p",null,"Most of the information regarding resource graphs can be introspected.\nThe main things that are not automatic:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Hostfile: which machines are we introspecting?"),(0,n.kt)("li",{parentName:"ol"},"What is the per-user mount point of the storage devices?")),(0,n.kt)("p",null,"If you want jarvis to execute distributed programs, provide a hostfile.\nThis is optional for local programs."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis hostfile set /path/to/hostfile\n")),(0,n.kt)("p",null,"Build the resource graph"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"jarvis resource-graph build +walkthrough\n")),(0,n.kt)("p",null,"The resource graph will be stored under\n${JARVIS_ROOT}/config/resource_graph.yaml"),(0,n.kt)("h1",{id:"23-storage-graph"},"2.3. Storage Graph"),(0,n.kt)("p",null,"The following command lists all block devices, their type, and their mount points:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"lsblk -o NAME,SIZE,MODEL,TRAN,MOUNTPOINT\n")),(0,n.kt)("p",null,"The following command lists all mounted filesystems and their capacities:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"df -h\n")),(0,n.kt)("p",null,"The following command lists all SPDK nvmes:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"spdk_nvme list -c\n")),(0,n.kt)("p",null,"NOTE: SPDK is not currently implemented"),(0,n.kt)("p",null,"The storage resource graph parses these commands automatically."),(0,n.kt)("h1",{id:"24-network-graph"},"2.4. Network Graph"),(0,n.kt)("p",null,"To build the network graph, we collect the outputs from the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"fi_info\n")),(0,n.kt)("p",null,"This will store the network information available per host."),(0,n.kt)("h1",{id:"25-cpu-graph"},"2.5. CPU Graph"),(0,n.kt)("p",null,"CPU information can be helpful for determining information such as the number\nof threads to use for a metadata service."),(0,n.kt)("p",null,"TODO."),(0,n.kt)("h1",{id:"26-memory-graph"},"2.6. Memory Graph"),(0,n.kt)("p",null,"Memory information can be useful for determining things like cache sizes."),(0,n.kt)("p",null,"TODO."),(0,n.kt)("h1",{id:"27-querying-the-resource-graph"},"2.7. Querying the Resource Graph"),(0,n.kt)("p",null,"The resource graph can be queried for network and storage info."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from jarvis_util import *\n\nrg = ResourceGraph()\nrg.find_storage(shared=True, condense=True)\n")),(0,n.kt)("h1",{id:"17-future-ideas"},"1.7. Future Ideas"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"What if we have a smart NIC?"),(0,n.kt)("li",{parentName:"ul"},"What if we have FPGAs and ASICs?")))}h.isMDXComponent=!0}}]);