"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[8257],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),m=i,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||n;return a?r.createElement(g,s(s({ref:t},p),{},{components:a})):r.createElement(g,s({ref:t},p))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,s=new Array(n);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<n;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7458:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=a(7462),i=(a(7294),a(3905)),n=a(3161);const s={title:"LABIOS: A Distributed Label-Based I/O System"},o=void 0,l={type:"mdx",permalink:"/research/projects/labios",source:"@site/src/pages/research/projects/labios.mdx",title:"LABIOS: A Distributed Label-Based I/O System",description:"Introduction",frontMatter:{title:"LABIOS: A Distributed Label-Based I/O System"}},c=[{value:"Introduction",id:"introduction",level:2},{value:"Approach",id:"approach",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Preliminary Results",id:"preliminary-results",level:2},{value:"Key Takeaways!",id:"key-takeaways",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...s}=e;return(0,i.kt)(d,(0,r.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(3663).Z,width:"200",alt:"Labios Project logo"})),(0,i.kt)("h1",{id:"labios-a-distributed-label-based-io-system"},"LABIOS: A Distributed Label-Based I/O System"),(0,i.kt)(n.Z,{projectId:"labios",mdxType:"ProjectBadges"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"HPC and Big Data")," environments have ",(0,i.kt)("strong",{parentName:"p"},"diverged")," over the years,\nresulting in diverging and even ",(0,i.kt)("strong",{parentName:"p"},"conflicting I/O requirements"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Consistency"),": Strong vs. Eventual"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"File Access"),": Shared vs. Independent"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Namespace"),": Hierarchical vs. Flat"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Hardware"),": Specialized vs. Commodity")),(0,i.kt)("p",null,"Addressing these challenges is vital to ",(0,i.kt)("strong",{parentName:"p"},"HPC + Big Data Convergence"),",\nas it ",(0,i.kt)("strong",{parentName:"p"},"enables colocating conflicting I/O workloads")," on the same\ncluster without sacrificing performance through ",(0,i.kt)("strong",{parentName:"p"},"storage bridging"),";\n",(0,i.kt)("strong",{parentName:"p"},"resource heterogeneity")," and ",(0,i.kt)("strong",{parentName:"p"},"data provisioning")," to support\ntransparent data operations and conversions for complex hyperconverged\nworkloads; ",(0,i.kt)("strong",{parentName:"p"},"storage malleability")," to improve resource utilization and\njob throughput in multi-tenant scenarios."),(0,i.kt)("h2",{id:"approach"},"Approach"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Data Model")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Labels"),", tuple of multiple operations & a pointer to input\ndata"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Storage-independent expression")," of application's intent"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Label Manager")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Build")," multiple labels based on the request characteristics"),(0,i.kt)("li",{parentName:"ul"},"Splits or combines labels to ",(0,i.kt)("strong",{parentName:"li"},"optimal I/O")," sizes"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Content Manager")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Data labels are ",(0,i.kt)("strong",{parentName:"li"},"temporarily stored")," here for async data\nplacement and computations"),(0,i.kt)("li",{parentName:"ul"},"Represented as a ",(0,i.kt)("strong",{parentName:"li"},"key-value store")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Label Dispatcher")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Dispatches")," labels to workers"),(0,i.kt)("li",{parentName:"ul"},"Supports various ",(0,i.kt)("strong",{parentName:"li"},"scheduling policies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Reorder labels")," while considering consistency")))),(0,i.kt)("h2",{id:"use-cases"},"Use Cases"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(9102).Z,alt:"Labios deployed for IO Accelerator",width:"600"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Labios for I/O acceleration",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fast distributed cache for temporary I/O"),(0,i.kt)("li",{parentName:"ul"},"Ideal for Hadoop workloads with node-local I/O")))),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(7991).Z,alt:"Labios deployed for IO forwarding",width:"600"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Labios for I/O forwarding",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Ideal for asynchronous I/O"),(0,i.kt)("li",{parentName:"ul"},"Apps pass data to Labios"),(0,i.kt)("li",{parentName:"ul"},"Labios interacts with remote storage"),(0,i.kt)("li",{parentName:"ul"},"Scalability limited to the size of I/O forwarding layer")))),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(4823).Z,alt:"Labios deployed for IO buffering",width:"600"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Labios for I/O buffering",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fast temporary storage for persistent I/O"),(0,i.kt)("li",{parentName:"ul"},"Data sharing between programs"),(0,i.kt)("li",{parentName:"ul"},"In-situ visualization and analysis"),(0,i.kt)("li",{parentName:"ul"},"Deep learning training pipelines")))),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(4699).Z,alt:"Labios deployed for remote storage",width:"600"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Labios as remote storage",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fast permanent storage"),(0,i.kt)("li",{parentName:"ul"},"Transparently support storage hierarchies"),(0,i.kt)("li",{parentName:"ul"},"Improved resource utilization and energy due to storage malleability"),(0,i.kt)("li",{parentName:"ul"},"Opportunities for live reconfiguration, crash-restart, and code upgrades")))),(0,i.kt)("h2",{id:"preliminary-results"},"Preliminary Results"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(2845).Z,alt:"A bar chart (X-axis: System[Hadoop/Labios]-Device[Disk/Memory]-Configurations[baseline/Local/Remote]) displaying the count of various memory types, considering Storage Bridging on Map-Reduce workload with 3072 processes at 32MB/proc.",width:"600"})),(0,i.kt)("p",null,"Storage Bridging on ",(0,i.kt)("strong",{parentName:"p"},"Map-Reduce workload"),", 3072 processes at 32MB/proc"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(6960).Z,alt:"Bar graph, x-axis is number of processes (384, 768, 1536, 3072), y-axis is the overall time in seconds ranging from 0 to 1800 with a step of 200. A bar chart displaying the count of various simulation types, including Storage Bridging on Map-Reduce workload with 3072 processes at 32MB/proc.",width:"600"})),(0,i.kt)("p",null,"Resource Heterogeneity on ",(0,i.kt)("strong",{parentName:"p"},"HACC workload"),", 3072 processes, 16 timesteps"),(0,i.kt)("h2",{id:"key-takeaways"},"Key Takeaways!"),(0,i.kt)("p",null,"Labios allows for ",(0,i.kt)("strong",{parentName:"p"},"Data-centric system design")," with up to ",(0,i.kt)("strong",{parentName:"p"},"6x boost")," in I/O performance and ",(0,i.kt)("strong",{parentName:"p"},"65% reduction")," in execution time. This data-centric system approach can allow a more ",(0,i.kt)("strong",{parentName:"p"},"profound understanding")," of how data flows into the system, allowing for ",(0,i.kt)("strong",{parentName:"p"},"AI-driven I/O optimizations")," and ",(0,i.kt)("strong",{parentName:"p"},"data interoperability"),"."),(0,i.kt)("p",null,"In collaboration with Sandia and Lawrence Livermore National Laboratories."))}u.isMDXComponent=!0},3161:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(7294),i=a(6010),n=a(866);function s(e){let{addMargin:t=!0,projectId:a}=e;const{isOpenSource:s=!1,isOurs:o=!1}=(0,n.R)(a);return s||o?r.createElement("div",{className:(0,i.Z)(t&&"margin-bottom--md"),style:{lineHeight:1}},o&&r.createElement("span",{className:"badge badge--primary margin-horiz--xs"},"GRC-LED"),s&&r.createElement("span",{className:"badge badge--secondary margin-horiz--xs"},"OPEN SOURCE")):null}},866:(e,t,a)=>{a.d(t,{R:()=>n,Z:()=>i});const r=[{id:"coeus",name:"Coeus",title:"Coeus: Accelerating Scientific Insights Using Enriched Metadata",shortDescription:"In collaboration with Sandia and Oak Ridge National Laboratories, coeus investigate the use of an active storage system to calculate derived quantities and support complex queries on scientific data (simulation and observational) as well as optimizing data placement across the storage hierarchy, with awareness of the resource limitations, to better support the scientific discovery process.",link:"/research/projects/coeus",isFeatured:!0,isOurs:!0,researchStatus:"r&d",status:"active",type:"funded"},{id:"chronolog",name:"ChronoLog",title:"ChronoLog: A High-Performance Storage Infrastructure for Activity and Log Workloads",shortDescription:"HPC applications generate more data than storage systems can handle, and it is becoming increasingly important to store activity (log) data generated by people and applications. ChronoLog is a hierarchical, distributed log store that leverages physical time to achieve log ordering and reduce contention while utilizing storage tiers to elastically scale the log capacity.",link:"/research/projects/chronolog",isFeatured:!0,isOpenSource:!0,isOurs:!0,researchStatus:"testing",status:"active",type:"funded"},{id:"iris",name:"IRIS",title:"IRIS: I/O Redirection Via Integrated Storage",shortDescription:"Various storage solutions exist and require specialized APIs and data models in order to use, which binds developers, applications, and entire computing facilities to using certain interfaces. Each storage system is designed and optimized for certain applications but does not perform well for others. IRIS is a unified storage access system that bridges the semantic gap between filesystems and object stores.",link:"/research/projects/iris",isFeatured:!1,isOpenSource:!0,isOurs:!0,researchStatus:"testing",status:"active",type:"funded"},{id:"hermes",name:"Hermes",title:"Hermes: Extending the HDF Library to Support Intelligent I/O Buffering for Deep Memory and Storage Hierarchy System",shortDescription:"To reduce the I/O bottleneck, complex storage hierarchies have been introduced. However, managing this complexity should not be left to application developers. Hermes is a middeware library that automatically manages buffering in heterogeneous storage environments.",link:"/research/projects/hermes",isFeatured:!0,isOpenSource:!0,isOurs:!0,researchStatus:"ready",status:"active",type:"funded"},{id:"labios",name:"Labios",title:"LABIOS: A Distributed Label-Based I/O System",shortDescription:"HPC and Big Data environments have diverged over the years, resulting in diverging and even conflicting I/O requirements. Labios aims to address the challenges vital to HPC + Big Data Convergence",link:"/research/projects/labios",isFeatured:!1,isOurs:!0,researchStatus:"r&d",status:"active",type:"funded"},{id:"dtio",name:"DTIO",title:"DTIO: A Data Task I/O Runtime",shortDescription:"In partnership with Argonne National Laboratory, DTIO investigates the use of a task framework for unifying complex I/O stacks and providing features such as resilience, fault-tolerance, and task replay.",link:"/research/projects/dtio",isFeatured:!1,isOurs:!0,researchStatus:"testing",status:"active",type:"funded"},{id:"viper",name:"Viper",title:"Viper: A High-Performance I/O Framework for Transferring Deep Neural Network Models",shortDescription:"Within a DL workflow, exchanging DNN models through PFS may result in  high model update latency and discovery latency. Moreover, model update frequency affects both training and inference performance. Viper is an I/O framework aiming to accelerate model discovery and delivery, and to find an optimal model checkpoint schedule to balance the trade-off.",link:"/research/projects/viper",isFeatured:!1,isOurs:!0,researchStatus:"r&d",status:"active",type:"funded"},{id:"dayu",name:"DaYu",title:"DaYu: Optimizing Workflow Performance by Elucidating Semantic Data Flow",shortDescription:"Nowadays, distributed scientific workflows encounter challenges in data movement through storage systems. DaYu, by capturing the mapping of data objects to I/O operations, can uncover new insights for optimizing workflow data movement.",link:"/research/projects/dayu",isFeatured:!1,isOpenSource:!0,isOurs:!0,researchStatus:"testing",status:"active",type:"funded"},{id:"wisio",name:"WisIO",title:"WisIO: Automated I/O Bottleneck Detection via Multi-Perspective Views for HPC Workloads",shortDescription:"Explore WisIO, an automated I/O bottleneck detection tool with multi-perspective views for I/O trace data analysis. Overcoming large-scale I/O challenges, WisIO utilizes distributed computing and an extensible rule engine for tailored solutions. Elevate your I/O analysis in HPC environments with WisIO.",link:"/research/projects/wisio",isFeatured:!1,isOpenSource:!1,isOurs:!0,researchStatus:"r&d",status:"active",type:"student"}],i=r;function n(e){return r.find((t=>t.id===e))}},9102:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/as_I_O_accelerator-07a649be4a59c560d4f8a908c77d85f7.png"},4823:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/as_I_O_buffer-b98e91849c91cb0ffce5b24cf715e6cc.png"},7991:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/as_I_O_fwl-ec6d7e1035c77c2e43c2287fc3c863ff.png"},4699:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/as_Storage-551c4e961bf2ae3213ed58de9c6c19e1.png"},3663:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/logo-d3a4a13984d9fecda910362c81482af0.png"},2845:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/storage-bridging-e819ea1543fc05da1ad32d24486e1e72.png"},6960:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/straight-resources-0990aed5f70d80124a462d944e751331.png"}}]);