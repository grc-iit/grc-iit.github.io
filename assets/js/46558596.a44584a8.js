"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[88551],{10851:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"jarvis/scspkg/index","title":"SCSPKG","description":"SCSPKG provides an infrastructures for installing packages manually.","source":"@site/docs/81-jarvis/03-scspkg/01-index.md","sourceDirName":"81-jarvis/03-scspkg","slug":"/jarvis/scspkg/index","permalink":"/docs/jarvis/scspkg/index","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Future Work","permalink":"/docs/jarvis/jarvis-cd/future-work"},"next":{"title":"Getting Started","permalink":"/docs/jarvis/scspkg/getting-started"}}');var i=s(74848),a=s(28453);const t={},o="SCSPKG",r={},d=[{value:"Dependencies",id:"dependencies",level:2},{value:"Install LMOD",id:"install-lmod",level:3},{value:"Installation",id:"installation",level:2},{value:"Clone the IOWarp Spack Repo",id:"clone-the-iowarp-spack-repo",level:3},{value:"Install SCSPKG",id:"install-scspkg",level:3},{value:"Setting up terminal",id:"setting-up-terminal",level:3},{value:"Initializing SCSPKG configuration",id:"initializing-scspkg-configuration",level:3},{value:"EXAMPLE: Creating a modulefile",id:"example-creating-a-modulefile",level:2},{value:"Using the modulefiles",id:"using-the-modulefiles",level:2},{value:"Uninstallation",id:"uninstallation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"scspkg",children:"SCSPKG"})}),"\n",(0,i.jsx)(n.p,{children:"SCSPKG provides an infrastructures for installing packages manually.\nIt provides a structure to modulefiles so that you don't have to build them manually.\nIt's useful for when you're developing things or when spack fails.\nWe will go through an example which installs zlib."}),"\n",(0,i.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"SCSPKG wraps around the system's installation of modules.\nIf your system doesn't have this, you'll need to install\nto make use of this tool. To check if your system has modules,\nrun the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"module avail\n"})}),"\n",(0,i.jsx)(n.p,{children:"It it succeeds, skip this section."}),"\n",(0,i.jsx)(n.h3,{id:"install-lmod",children:"Install LMOD"}),"\n",(0,i.jsxs)(n.p,{children:["There are two major implementations of modules:\n",(0,i.jsx)(n.code,{children:"LMOD"})," and ",(0,i.jsx)(n.code,{children:"Environment Modules"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To install LMOD, follow this ",(0,i.jsx)(n.a,{href:"https://lmod.readthedocs.io/en/latest/030_installing.html",children:"guide"}),".\nLMOD is recommended -- only use environment modules if that's what your system\ncomes with. We'll repeat the steps used for installing on Ubuntu + bash here.\nLMOD is installed differently for different distros and different shell types."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt -y install lmod\nnano ~/.bashrc\n"})}),"\n",(0,i.jsx)(n.p,{children:"In your bashrc, append:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"if ! shopt -q login_shell; then\n  if [ -d /etc/profile.d ]; then\n    for i in /etc/profile.d/*.sh; do\n      if [ -r $i ]; then\n        . $i\n      fi\n    done\n  fi\nfi\n"})}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"clone-the-iowarp-spack-repo",children:"Clone the IOWarp Spack Repo"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ${HOME}\ngit clone https://github.com/iowarp/iowarp-install.git\nspack repo add iowarp-install/iowarp-spack\n"})}),"\n",(0,i.jsx)(n.h3,{id:"install-scspkg",children:"Install SCSPKG"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"spack install py-ppi-scspkg\n"})}),"\n",(0,i.jsx)(n.p,{children:"Spack packages must be loaded to use them.\nYou'll have to do this for each new terminal."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"spack load py-ppi-scspkg\n"})}),"\n",(0,i.jsx)(n.h3,{id:"setting-up-terminal",children:"Setting up terminal"}),"\n",(0,i.jsx)(n.p,{children:"We need to ensure that LMOD will search for your modules:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'SCSPKG_MODULE_DIR=$(scspkg module dir)\necho "module use ${SCSPKG_MODULE_DIR}" >> ~/.bashrc\nmodule use ${SCSPKG_MODULE_DIR}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"initializing-scspkg-configuration",children:"Initializing SCSPKG configuration"}),"\n",(0,i.jsx)(n.p,{children:"Create the scspkg configuration file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"scspkg init\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will create a directory ",(0,i.jsx)(n.code,{children:"~/.scspkg"}),", which is\nwhere your modulefiles will all be stored."]}),"\n",(0,i.jsx)(n.h2,{id:"example-creating-a-modulefile",children:"EXAMPLE: Creating a modulefile"}),"\n",(0,i.jsx)(n.p,{children:"Say you want to install zlib manually:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"scspkg create zlib\ncd $(scspkg pkg src zlib)\nwget https://www.zlib.net/zlib-1.3.tar.gz\ntar -xzf zlib-1.3.tar.gz\ncd zlib-1.3\n./configure --prefix=$(scspkg pkg root zlib)\nmake -j8 install\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can now run the following, and your environment\nwill be updated:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"module load zlib\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-the-modulefiles",children:"Using the modulefiles"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"module avail #List of available modules\nmodule list #List of currently running modules\nmodule load [package] #Load a module corresponding to a package\nmodule unload [package] #Unload a module\nmodule purge #Unload all modules\n"})}),"\n",(0,i.jsx)(n.h2,{id:"uninstallation",children:"Uninstallation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"scspkg reset\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var l=s(96540);const i={},a=l.createContext(i);function t(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);