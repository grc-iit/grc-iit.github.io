"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[8920],{1482:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"jarvis/jarvis-cd/pipeline-tests","title":"Pipeline Tests","description":"Pipeline tests are used to run experiment sets using","source":"@site/docs/81-jarvis/02-jarvis-cd/06-pipeline-tests.md","sourceDirName":"81-jarvis/02-jarvis-cd","slug":"/jarvis/jarvis-cd/pipeline-tests","permalink":"/docs/jarvis/jarvis-cd/pipeline-tests","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pipeline Scripts","permalink":"/docs/jarvis/jarvis-cd/pipeline-scripts"},"next":{"title":"Pipeline Indexes","permalink":"/docs/jarvis/jarvis-cd/pipeline-indexes"}}');var i=s(74848),a=s(28453);const r={},o="Pipeline Tests",d={},l=[{value:"Example File",id:"example-file",level:2},{value:"config:",id:"config",level:2},{value:"vars:",id:"vars",level:2},{value:"loop:",id:"loop",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pipeline-tests",children:"Pipeline Tests"})}),"\n",(0,i.jsx)(n.p,{children:"Pipeline tests are used to run experiment sets using\na grid search."}),"\n",(0,i.jsx)(n.h2,{id:"example-file",children:"Example File"}),"\n",(0,i.jsx)(n.p,{children:"Below is an example of a pipeline for running various\nconfigurations of spark KMeans."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'config:\n  name: mm_kmeans_spark\n  env: mega_mmap\n  pkgs:\n    - pkg_type: spark_cluster\n      pkg_name: spark_cluster\n      num_nodes: 1\n    - pkg_type: mm_kmeans_df\n      pkg_name: mm_kmeans_df\n      path: ${HOME}/mm_data/parquet/kmeans.parquet\n      window_size: 4g\n      df_size: 4g\n      nprocs: 1\n      ppn: 16\n      type: parquet\n      k: 1000\n    - pkg_type: mm_kmeans\n      pkg_name: mm_kmeans\n      path: ${HOME}/mm_data/parquet/*\n      window_size: 30g\n      api: spark\n      max_iter: 4\n      k: 8\n      do_dbg: False\n      dbg_port: 4001\nvars:\n  mm_kmeans_df.window_size: [16m, 64m, 128m, 1g, 2g, 4g]\n  mm_kmeans_df.df_size: [16m, 64m, 128m, 1g, 2g, 4g]\n  spark_cluster.num_nodes: [4]\nloop:\n  - [mm_kmeans_df.window_size, mm_kmeans_df.df_size]\n  - [spark_cluster.num_nodes]\nrepeat: 1\noutput: "${SHARED_DIR}/output_multi"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"config",children:"config:"}),"\n",(0,i.jsxs)(n.p,{children:["This section is the skeleton of a pipeline. It has the same exact parameters\nas a ",(0,i.jsx)(n.a,{href:"/docs/jarvis/jarvis-cd/pipeline-scripts",children:"pipeline script"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This example, the pipeline will be called mm_kmeans_spark and launch a spark\ncluster, dataset generator, and spark kmeans in that order."}),"\n",(0,i.jsx)(n.h2,{id:"vars",children:"vars:"}),"\n",(0,i.jsx)(n.p,{children:"Each pkg in the pipeline has a set of variables it exposes. In this example,\nwe vary the dataset size, a window size, and the number of nodes in the spark cluster."}),"\n",(0,i.jsxs)(n.p,{children:["The syntax of variables are: ",(0,i.jsx)(n.code,{children:"pkg_name.var_name"})]}),"\n",(0,i.jsx)(n.h2,{id:"loop",children:"loop:"}),"\n",(0,i.jsx)(n.p,{children:"This is represents what test loop should look like. In pseudocode,\nthe above loop would translate to python roughly as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"mm_kmeans_df_window_size = ['16m', '64m', '128m', '1g', '2g', '4g']\nmm_kmeans_df_df_size = ['16m', '64m', '128m', '1g', '2g', '4g']\nspark_cluster_num_nodes = [4]\nfor window_size, df_size in mm_kmeans_df_window_size, mm_kmeans_df_df_size:\n  for num_nodes in spark_cluster_num_nodes:\n    mm_kmeans_spark.configure(window_size, df_size, num_nodes)\n"})}),"\n",(0,i.jsx)(n.p,{children:"In this example, a total of 6 cases are executed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"16m 16m 4\n64m 64m 4\n128m 128m 4\n1g 1g 4\n2g 2g 4\n4g 4g 4\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By having a separate loop section, you can define certain variables as together or independent\nto reduce the number of total test cases. In this example, ",(0,i.jsx)(n.code,{children:"mm_kmeans_df.window_size"})," and ",(0,i.jsx)(n.code,{children:"mm_kmeans_df.df_size"}),"\nvary together, but independently from ",(0,i.jsx)(n.code,{children:"spark_cluster.num_nodes"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"mm_kmeans_df.window_size"})," and ",(0,i.jsx)(n.code,{children:"mm_kmeans_df.df_size"})," must have the same size (in this case 6)."]}),"\n",(0,i.jsx)(n.h1,{id:"repeat",children:"repeat:"}),"\n",(0,i.jsx)(n.p,{children:"The number of times each experiment should be conducted. For example,\nthis can be used to calculate the average across experiment runs to\nget a better understanding of variability and noise in your study."}),"\n",(0,i.jsx)(n.p,{children:"In this example, experiments are only conducted once."}),"\n",(0,i.jsx)(n.h1,{id:"output",children:"output"}),"\n",(0,i.jsxs)(n.p,{children:["This is the directory where the results are stored. Note, jarvis stores\nthe pipeline's shared directory, private directory, and configuration directory\nin the following three environment variables: ",(0,i.jsx)(n.code,{children:"${SHARED_DIR}"}),", ",(0,i.jsx)(n.code,{children:"${PRIVATE_DIR}"}),",\nand ",(0,i.jsx)(n.code,{children:"${CONFIG_DIR}"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"By default, the output of this is going to be a dataset with each variable as a parameter:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[mm_kmeans_df.window_size] [mm_kmeans_df.df_size] [spark_cluster.num_nodes]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To get more columns, pkgs can define a custom ",(0,i.jsx)(n.code,{children:"_get_stat()"})," function. This is more\nfor developers than users: Below is an example of a custom stat for the YCSB benchmark,\nwhich analyzes the output of YCSB for its throughput and total runtime."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Ycsb:\n  def _get_stat(self, stat_dict):\n        \"\"\"\n        Get statistics from the application.\n\n        :param stat_dict: A dictionary of statistics.\n        :return: None\n        \"\"\"\n        output = self.exec.stdout['localhost']\n        if 'throughput(ops/sec)' in output:\n            throughput = re.search(r'throughput\\(ops\\/sec\\): ([0-9.]+)', output).group(1)\n            stat_dict[f'{self.pkg_id}.throughput'] = throughput\n        stat_dict[f'{self.pkg_id}.runtime'] = self.start_time\n"})})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var t=s(96540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);