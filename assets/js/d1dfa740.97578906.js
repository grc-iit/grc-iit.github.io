"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[5881],{5733:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});var s=t(5893),i=t(1151);const c={},o="Unit Testing in C++",r={id:"hpc-tutorials/cpp-introduction/unit-tests",title:"Unit Testing in C++",description:"a) Why is Testing Important?",source:"@site/docs/02-hpc-tutorials/04-cpp-introduction/12-unit-tests.md",sourceDirName:"02-hpc-tutorials/04-cpp-introduction",slug:"/hpc-tutorials/cpp-introduction/unit-tests",permalink:"/docs/hpc-tutorials/cpp-introduction/unit-tests",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mixins",permalink:"/docs/hpc-tutorials/cpp-introduction/cpp-mixins"},next:{title:"Docker Guide",permalink:"/docs/hpc-tutorials/docker/docker-basics"}},l={},a=[{value:"a) Why is Testing Important?",id:"a-why-is-testing-important",level:2},{value:"b) Testing in CMake with CTest",id:"b-testing-in-cmake-with-ctest",level:2},{value:"c) Testing in CMake with Google Test",id:"c-testing-in-cmake-with-google-test",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"unit-testing-in-c",children:"Unit Testing in C++"}),"\n",(0,s.jsx)(n.h2,{id:"a-why-is-testing-important",children:"a) Why is Testing Important?"}),"\n",(0,s.jsx)(n.p,{children:"Unit testing is a crucial aspect of software development. Here's why:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quality Assurance"}),": Unit tests ensure that individual units of code (like functions or methods) work as intended."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Regression Detection"}),": When changes are made to the codebase, unit tests can detect if previously working functionality has been broken."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": Tests provide a form of documentation by showcasing how a piece of code is intended to be used."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Design"}),": Writing tests can help in designing better and more modular code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Confidence"}),": With a comprehensive suite of tests, developers can make changes with the confidence that they haven't inadvertently introduced bugs."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example"}),":\nImagine you have a function ",(0,s.jsx)(n.code,{children:"add(int a, int b)"})," that returns the sum of two numbers. A unit test would ensure that ",(0,s.jsx)(n.code,{children:"add(2, 3)"})," always returns ",(0,s.jsx)(n.code,{children:"5"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"b-testing-in-cmake-with-ctest",children:"b) Testing in CMake with CTest"}),"\n",(0,s.jsx)(n.p,{children:"CTest is a testing tool distributed as a part of CMake. It allows you to easily create, manage, and run your tests."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Basic Example"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["In your ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"}),", enable testing:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"enable_testing()\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add a test executable:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"add_executable(my_test test.cpp)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add the test to CTest:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"add_test(NAME MyTest COMMAND my_test)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build and run tests:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir build && cd build\ncmake ..\nmake\nctest\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": ",(0,s.jsx)(n.a,{href:"https://cmake.org/cmake/help/latest/manual/ctest.1.html",children:"CTest Documentation"})]}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.code,{children:"FetchContent"})," is a popular way to integrate dependencies directly into a CMake project. Here's how you can integrate Google Test using ",(0,s.jsx)(n.code,{children:"FetchContent"}),":"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"c-testing-in-cmake-with-google-test",children:"c) Testing in CMake with Google Test"}),"\n",(0,s.jsxs)(n.p,{children:["Google Test is a popular C++ testing framework. Here's how you can integrate it with CMake using ",(0,s.jsx)(n.code,{children:"FetchContent"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Installation using ",(0,s.jsx)(n.code,{children:"FetchContent"})]}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["In your ",(0,s.jsx)(n.code,{children:"CMakeLists.txt"}),", you can fetch Google Test as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"include(FetchContent)\n\nFetchContent_Declare(\n  googletest\n  GIT_REPOSITORY https://github.com/google/googletest.git\n  GIT_TAG        release-1.10.0\n)\n\nFetchContent_MakeAvailable(googletest)\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will download, build, and make Google Test available in your project."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Integration with CMake"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"After fetching Google Test, you can link against it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmake",children:"add_executable(my_gtest test_gtest.cpp)\ntarget_link_libraries(my_gtest gtest_main)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Writing a Test"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#include <gtest/gtest.h>\n\nTEST(MyTestSuite, MyTestCase) {\n    EXPECT_EQ(2 + 3, 5);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.code,{children:"gtest_main"})," as a linked library, you don't need a ",(0,s.jsx)(n.code,{children:"main"})," function; Google Test provides one for you."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build and run tests as you would with CTest."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Documentation"}),": ",(0,s.jsx)(n.a,{href:"https://github.com/google/googletest",children:"Google Test Github Repository"})]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var s=t(7294);const i={},c=s.createContext(i);function o(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);