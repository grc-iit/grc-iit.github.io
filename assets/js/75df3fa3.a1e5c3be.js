"use strict";(self.webpackChunkgrc=self.webpackChunkgrc||[]).push([[6202],{94519:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"iowarp/components/runtime/domains","title":"Domains","description":"Domains are used to represent groupings of ChiContainers for logical organization.","source":"@site/docs/11-iowarp/03-components/03-runtime/06-domains.md","sourceDirName":"11-iowarp/03-components/03-runtime","slug":"/iowarp/components/runtime/domains","permalink":"/docs/iowarp/components/runtime/domains","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Deploying Modules","permalink":"/docs/iowarp/components/runtime/deploying-mods"},"next":{"title":"Statically Scheduling Tasks and Concurrency","permalink":"/docs/iowarp/components/runtime/fixed-scheduling"}}');var a=s(74848),o=s(28453);const r={},t="Domains",l={},d=[{value:"Domain Query",id:"domain-query",level:2},{value:"Range Flags",id:"range-flags",level:3},{value:"Selection Flags",id:"selection-flags",level:3},{value:"Iteration Algorithms",id:"iteration-algorithms",level:3},{value:"Domain Query: GetDirectHash",id:"domain-query-getdirecthash",level:2},{value:"Domain Query:: GetGlobal",id:"domain-query-getglobal",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"domains",children:"Domains"})}),"\n",(0,a.jsx)(n.p,{children:"Domains are used to represent groupings of ChiContainers for logical organization.\nBy default, the following domains are created:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"chi::SubDomainId::kGlobalContainers"}),": The set of all containers in the pool"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"chi::SubDomainId::kLocalContainers"}),": The set of containers on this node"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["There is also a ",(0,a.jsx)(n.code,{children:"chi::SubDomainId::kPhysicalNode"}),", which represents the\naddress of an actual machine. When a runtime is launched on a node, it is assigned a\nunique ID between 1 and 2^32. This domain gets used for situations such as migrating\nChiContainers across nodes."]}),"\n",(0,a.jsx)(n.h2,{id:"domain-query",children:"Domain Query"}),"\n",(0,a.jsx)(n.p,{children:"A Domain Query represents a subset of addresses. For example, a hashtable may\nroute a task to a specific ChiContainer, which represents the bucket. Alternatively,\na cache invalidation algorithm may want to broadcast a task across all ChiContainers\nto invalidate data caches."}),"\n",(0,a.jsx)(n.h3,{id:"range-flags",children:"Range Flags"}),"\n",(0,a.jsx)(n.p,{children:"Range flags represent the scope of the query:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kLocal"}),": Only addresses local to this node are used"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kDirect"}),": A single specific address is used"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kGlobal"}),": Can be a range of addresses across all nodes"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kSchedule"}),": Determine the addresses later through a scheduler"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"selection-flags",children:"Selection Flags"}),"\n",(0,a.jsx)(n.p,{children:"Selection flags indicate how the addresses are represented:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kId"}),": The address is the exact address to be used"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kHash"}),": The address will be hashed against the size of the domain"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kRange"}),": The address will be a range of nodes"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"iteration-algorithms",children:"Iteration Algorithms"}),"\n",(0,a.jsx)(n.p,{children:"Iteration flags indicate how  a task will be dispersed among the domain"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kBroadcast"}),": Will broadcast the task across all nodes in the domain"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"kRepUntilSuccess"}),": Will iterate over the domain until success"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"domain-query-getdirecthash",children:"Domain Query: GetDirectHash"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"static DomainQuery GetDirectHash(const SubDomainGroup &sub_id, u32 hash,\n                                   u32 iter_flags = kBroadcast);\n"})}),"\n",(0,a.jsx)(n.p,{children:"Hash the task to an offset in the subdomain vector. Good for things\nlike hashtables."}),"\n",(0,a.jsx)(n.h2,{id:"domain-query-getglobal",children:"Domain Query:: GetGlobal"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"static DomainQuery GetGlobalBcast();\n"})}),"\n",(0,a.jsx)(n.p,{children:"Broadcast the task to every ChiContainer in the ChiPool. Useful\nfor things like flushing."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(96540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);