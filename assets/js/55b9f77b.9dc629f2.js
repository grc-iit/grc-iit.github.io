"use strict";(self.webpackChunkgnosis=self.webpackChunkgnosis||[]).push([[167],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9399:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="Main Scenario",s={unversionedId:"hermes/index",id:"hermes/index",title:"Main Scenario",description:"Deep Distributed Storage Hierarchy (DDSH)",source:"@site/docs/03-hermes/01-index.md",sourceDirName:"03-hermes",slug:"/hermes/index",permalink:"/docs/hermes/index",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hello World",permalink:"/docs/hpc-tutorials/cpp-introduction/hello-world"},next:{title:"Building Hermes",permalink:"/docs/hermes/getting-started"}},l={},p=[{value:"How We Do It",id:"how-we-do-it",level:2},{value:"Other Scenarios and Use Cases",id:"other-scenarios-and-use-cases",level:2},{value:"Resources",id:"resources",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"main-scenario"},"Main Scenario"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Deep Distributed Storage Hierarchy (DDSH)",src:n(2602).Z,width:"637",height:"408"})),(0,a.kt)("p",null,"Consider an HPC cluster equipped with a deep, distributed ",(0,a.kt)("a",{parentName:"p",href:"/docs/hermes/components/examples"},"storage\nhierarchy")," (DDSH), the bottom layer of\nwhich is typically a parallel file system (PFS). DDSH was introduced to\nboost or to at least improve the I/O (POSIX, MPI-IO, HDF5, ...)\nperformance of applications performing poorly otherwise. Unfortunately,\nDDSH is not a turn-key solution and difficult to use from a developer's or user's\nperspective. It seems that users are expected to\ntake control, to learn all the necessary DDSH details, and to make the\nnecessary code changes. Even if successful, this is a distraction from\nsolving domain problems and, worse, it will be harder to maintain and\nport the application to other or future systems."),(0,a.kt)("p",null,"The goal of the Hermes project is to provide a ",(0,a.kt)("em",{parentName:"p"},"seamless")," solution that\nutilizes DDSH without or requiring only minor application changes."),(0,a.kt)("p",null,"(Even without a deep DDSH, determined users have created original\nsolutions to overcome I/O performance challenges. See use cases for an example. Many of them can be\nconsidered custom, i.e., application-specific, I/O buffering systems.)"),(0,a.kt)("h2",{id:"how-we-do-it"},"How We Do It"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Hermes Core",src:n(5362).Z,width:"641",height:"593"})),(0,a.kt)("p",null,"We implement an ",(0,a.kt)("em",{parentName:"p"},"I/O buffering system"),"\nwith the following characteristics:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Being seamless, it's a go-between for the by-and-large unmodified\napplications and the PFS. Applications will see a hopefully more\nperformant PFS."),(0,a.kt)("li",{parentName:"ul"},"Users designate certain resources to be used for I/O buffering. Like\nmost buffering systems, it has a finite capacity. When that capacity\nis reached, the buffering system can no longer deliver noticeable\nbenefits and may perform as poorly as (or worse) than the unbuffered\nsystem (going to PFS)."),(0,a.kt)("li",{parentName:"ul"},"Users express I/O priorities, constraints, and hints via buffering policies."),(0,a.kt)("li",{parentName:"ul"},"Given individual or batches of I/O operations (writes and reads),\nthe ",(0,a.kt)("strong",{parentName:"li"},"main challenge")," for such a buffering system is to determine\nwhere in DDSH a given data item is ",(0,a.kt)("b",null,"best/well/optimally-"),"placed at\nthat point in time."),(0,a.kt)("li",{parentName:"ul"},"To that end, the system consists of the following major components:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/data-placement"},"Strategies and algorithms")," that\nimplement policies and facilitate\ndata placement decisions. Speculative data\nplacement for read operations is also known as\n",(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/prefetcher"},"prefetching"),"."),(0,a.kt)("li",{parentName:"ul"},"These strategies work with (dynamic) sets of ",(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/buffering-target"},"buffering\ntarget"),"s and are applicable more\nbroadly."),(0,a.kt)("li",{parentName:"ul"},"The physical buffering resources are managed in a distributed\n",(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/buffer-pool"},"buffer pool")," (see also Batching\nSystem)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/buffer-organizer"},"Buffer Organizer")),(0,a.kt)("li",{parentName:"ul"},"Profiler"),(0,a.kt)("li",{parentName:"ul"},"To separate concerns and for portability, system buffers are\n",(0,a.kt)("strong",{parentName:"li"},"not")," directly exposed to applications. There is a set of\nintermediate primitives targeted by\n",(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/adapters"},"adapters")," for different I/O libraries. A\ngeneric ",(0,a.kt)("a",{parentName:"li",href:"/docs/hermes/components/distributed-metadata"},"metadata manager")," (MDM),\nsupports the bookkeeping needs of the various components."))),(0,a.kt)("li",{parentName:"ul"},"The whole system is deployed in a server-less fashion.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": A buffering system does ",(0,a.kt)("strong",{parentName:"p"},"not")," provide the same semantics as\nstorage."),(0,a.kt)("h2",{id:"other-scenarios-and-use-cases"},"Other Scenarios and Use Cases"),(0,a.kt)("p",null,"Our main scenario, a parallel application running on an HPC system and\nwriting files to a parallel file system, might be referred to as\noperating in Hermes ",(0,a.kt)("strong",{parentName:"p"},"persistent mode."),' This might be extended to\nmultiple applications "communicating" via the PFS. Another important\nscenario and set of use cases include applications that operate in a\nmore ',(0,a.kt)("strong",{parentName:"p"},"transient mode"),': they tend to produce massive amounts of\ntemporary data that need not be persisted in a PFS after the application\ncompletes. With DDSH, the use of PFS appears as a matter of last resort\n("out-of-core"), and an I/O buffering system might offer a more\nperformant solution.'),(0,a.kt)("p",null,"DDSH are by no means limited to HPC clusters. Today, cloud-based VMs\nfrom major providers offer half a dozen or more storage options and\nmultiple interconnects. Since customers/users have the ability to\ncustomize the target system, it may seem that good I/O performance might\nbe a little easier to achieve. In practice, the picture is more\ncomplicated. For one, this is no longer just a technical decision, but\neconomic considerations (price and supply) play an important role. To\nwrite applications that perform well across a fleet of instance types\nand storage options is almost more challenging than to target a\nby-comparison stable HPC system. The concepts and techniques behind\nHermes are by no means specific to HPC systems and their suitability\nshould be examined in cloud-based environments."),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://par.nsf.gov/servlets/purl/10063843"},"Hermes: a heterogeneous-aware multi-tiered distributed I/O\nbuffering system")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://drive.google.com/drive/u/0/folders/0ALuH0a_m3nGWUk9PVA"},"Google\nDrive"))))}d.isMDXComponent=!0},5362:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Hermes_Core_Lib_internals-75c6dbfaf190b4e42c765bee3c3dd82e.jpg"},2602:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Hermes_hierachy-a8c0d5e9e044008fd19663a13df5bb02.jpg"}}]);