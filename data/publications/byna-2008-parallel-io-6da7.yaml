abstract: |-
  Parallel I/O prefetching is considered to be effective
  in improving I/O performance. However, the effectiveness
  depends on determining patterns among future I/O accesses
  swiftly and fetching data in time, which is difficult to achieve in
  general. In this study, we propose an I/O signature-based
  prefetching strategy. The idea is to use a predetermined I/O
  signature of an application to guide prefetching. To put this idea
  to work, we first derived a classification of patterns and
  introduced a simple and effective signature notation to represent
  patterns. We then developed a toolkit to trace and generate I/O
  signatures automatically. Finally, we designed and implemented a
  thread-based client-side collective prefetching cache layer for
  MPI-IO library to support prefetching. A prefetching thread
  reads I/O signatures of an application and adjusts them by
  observing I/O accesses at runtime. Experimental results show
  that the proposed prefetching method improves I/O performance
  significantly for applications with complex patterns.
authors:
  - S. Byna
  - Y. Chen
  - X.-H. Sun
  - R. Thakur
  - W. D. Gropp
date: November, 2008
doi: 10.1109/sc.2008.5213604
links:
  pdf: http://cs.iit.edu/~scs/assets/files/pap297s4.pdf
month: 11
slug: byna-2008-parallel-io-6da7
tags: []
title: Parallel I/O Prefetching Using MPI File Caching and I/O Signatures
type: Conference
venue: The ACM/IEEE SuperComputing Conference (SC'08)
year: 2008
