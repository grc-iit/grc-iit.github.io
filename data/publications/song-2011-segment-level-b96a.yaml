abstract: |-
  Parallel file systems are designed to mask the ever-
  increasing gap between CPU and disk speeds via parallel I/O
  processing. While they have become an indispensable compo-
  nent of modern high-end computing systems, their inadequate
  performance is a critical issue facing the HPC community today.
  Conventionally, a parallel file system stripes a file across multiple
  file servers with a fixed stripe size. The stripe size is a vital
  performance parameter, but the optimal value for it is often
  application dependent. How to determine the optimal stripe
  size is a difficult research problem. Based on the observation
  that many applications have different data-access clusters in
  one file, with each cluster having a distinguished data access
  pattern, we propose in this paper a segmented data layout scheme
  for parallel file systems. The basic idea behind the segmented
  approach is to divide a file logically into segments such that an
  optimal stripe size can be identified for each segment. A five-step
  method is introduced to conduct the segmentation, to identify
  the appropriate stripe size for each segment, and to carry out
  the segmented data layout scheme automatically. Experimental
  results show that the proposed layout scheme is feasible and
  effective, and it improves performance up to 163% for writing
  and 132% for reading on the widely used IOR and IOzone
  benchmarks.
  Keywords-parallel file system, adaptive data layout, file seg-
  ment, optimal stripe size, I/O performance
authors:
  - H. Song
  - Y. Yin
  - X.-H. Sun
  - R. Thakur
  - S. Lang
date: May, 2011
doi: 10.1109/ccgrid.2011.26
links:
  bibtex: http://cs.iit.edu/~scs/assets/files/song2011segment.bib
  citation: http://cs.iit.edu/~scs/assets/files/song2011segment.txt
  pdf: http://cs.iit.edu/~scs/assets/files/fine-grained_layout_ccgrid.pdf
month: 5
slug: song-2011-segment-level-b96a
tags: []
title: >-
  A Segment-Level Adaptive Data Layout Scheme for Improved Load Balance in
  Parallel File Systems
type: Conference
venue: >-
  The 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing
  (CCGrid'11), Newport Beach, CA, USA
year: 2011
